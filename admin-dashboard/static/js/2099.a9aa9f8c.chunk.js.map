{"version":3,"file":"static/js/2099.a9aa9f8c.chunk.js","mappings":"wRAoWA,UA1UqB,WAEjB,MAAsCA,EAAAA,SAAe,CAAC,GAAtD,eAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0BF,EAAAA,SAAe,IAAzC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,EAA0CR,EAAAA,SAAe,IAAzD,eAAOS,EAAP,KAAsBC,EAAtB,KAGA,EAAgCV,EAAAA,SAAeO,EAASI,MAAMC,cAA9D,eAAOC,EAAP,KAAiBC,EAAjB,KAGA,EAAsCd,EAAAA,SAAe,CACjDe,QAASR,EAASI,MAAMI,QACxBC,QAAST,EAASI,MAAMK,QACxBC,QAASV,EAASI,MAAMM,QACxBC,QAASX,EAASI,MAAMO,UAJ5B,eAAOC,EAAP,KAAoBC,EAApB,KAMMC,EAAkB,SAACC,GACrB,IAAIC,EAAS,CAAC,EAgBd,OAfA,IAAIC,SAASF,GAAMG,SACf,SAACC,EAAOC,GAEJ,GAAIC,OAAOC,UAAUC,eAAeC,KAAKR,EAAQI,GAAM,CACnD,IAAIK,EAAUT,EAAOI,GAChBM,MAAMC,QAAQF,KAEfA,EAAUT,EAAOI,GAAO,CAACK,IAE7BA,EAAQG,KAAKT,EAChB,MACGH,EAAOI,GAAOD,CAErB,IAEEH,CACV,EACKa,EAAY,yCAAG,WAAOC,GAAP,2FACjBA,EAAEC,kBACEC,EAAOlB,EAAgBgB,EAAEG,SAGxBC,UAA+B,SAAnBF,EAAKE,UAGlBC,EAAMC,EAAAA,GAAAA,aAAyBpC,EAASI,MAAMiC,GARjC,SASIC,MAAMH,EAAK,CAC5BI,OAAQ,OACRC,QAAS,CACL,eAAiBC,EAAAA,EAAAA,MACjB,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUZ,KAfR,cASba,EATa,gBAiBAA,EAASC,OAjBT,OAoBG,OAHhBA,EAjBa,QAoBRC,SACLjB,EAAEG,OAAOe,QACTlD,EAAS,kBAEL,WAAYgD,KACNG,EAAI,IAAIC,MACZC,QAAQF,EAAEG,UAAa,SACzBC,SAASC,OAAT,iBAA4BR,EAAKS,OAAjC,oBAAmDN,EAAEO,cAArD,eAGJC,EAAAA,EAAAA,IAAkB,UAAW,gCA9BhB,4CAAH,sDA0CZC,EAAe,SAAC5B,EAAG6B,GACrB,IAAIC,EAAWP,SAASQ,iBAAiB,6BAC7B,QAARF,EAMJC,EAAS1C,SAAQ,SAAC4C,GACdA,EAAMC,SAAU,EACZJ,EAAIK,SAASF,EAAM3C,SACnB2C,EAAMC,QAAUjC,EAAEG,OAAO8B,QAEhC,IAVGH,EAAS1C,SAAQ,SAAC4C,GACdA,EAAMC,QAAUjC,EAAEG,OAAO8B,OAC5B,GASR,EA6BD,OA3BAtE,EAAAA,WAAgB,YACZ,uBAAC,oGACO0C,EAAMC,EAAAA,GAAAA,gBADb,SAEwBE,MAAMH,EAAK,CAC5BI,OAAQ,MACRC,QAAS,CACL,eAAiBC,EAAAA,EAAAA,MACjB,eAAgB,sBAN3B,cAEOI,EAFP,gBASoBA,EAASC,OAT7B,OASOA,EATP,OAUGnD,EAAemD,EAAKd,MACpBnC,EAASiD,EAAKlD,OAXjB,0CAAD,IAaA,uBAAC,2GACwB0C,MAAMF,EAAAA,GAAAA,iBAAA,8BAA4D,CACnFG,OAAQ,MACRC,QAAS,CACL,eAAiBC,EAAAA,EAAAA,MACjB,eAAgB,sBAL3B,cACOI,EADP,gBAQuBA,EAASC,OARhC,OAQOmB,EARP,OASG9D,EAAiB8D,EAAQjC,MAT5B,0CAAD,EAWH,GAAE,KAIC,iCAEI,SAAC,KAAD,CACIkC,SAAS,YACTC,MAAM,UACNC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,KAChB,SAAC,KAAD,CAAOC,UAAU,OAAjB,UACI,SAAC,KAAD,WACI,eAAIA,UAAU,0BAAd,iCAKR,SAAC,KAAD,WACI,SAAC,KAAD,WACI,UAAC,KAAD,CAAOC,SAAUhD,EAAjB,WACI,UAAC,KAAD,YACI,SAAC,KAAD,CAAMiD,GAAI,EAAV,UACI,iBAAKF,UAAU,OAAf,WACI,UAAC,KAAD,CAAYG,QAAQ,OAApB,wBAAqC,iBAAMH,UAAU,cAAhB,mBACrC,SAAC,KAAD,CAAYI,KAAK,OAAOC,aAAcjF,EAASI,MAAM8E,WAAYC,YAAY,mBAAmBC,KAAK,aAAaC,UAAQ,UAGlI,SAAC,KAAD,CAAMP,GAAI,EAAV,UACI,iBAAKF,UAAU,OAAf,WACI,UAAC,KAAD,CAAYG,QAAQ,OAApB,uBAAoC,iBAAMH,UAAU,cAAhB,mBACpC,SAAC,KAAD,CAAYI,KAAK,OAAOC,aAAcjF,EAASI,MAAMkF,UAAWH,YAAY,kBAAkBC,KAAK,YAAYC,UAAQ,aAKnI,UAAC,KAAD,YACI,SAAC,KAAD,CAAMP,GAAI,EAAV,UACI,iBAAKF,UAAU,OAAf,WACI,UAAC,KAAD,CAAYG,QAAQ,OAApB,uBAAoC,iBAAMH,UAAU,cAAhB,mBACpC,SAAC,KAAD,CAAYI,KAAK,OAAOC,aAAcjF,EAASI,MAAMmF,SAAUJ,YAAY,kBAAkBC,KAAK,WAAWC,UAAQ,UAG7H,SAAC,KAAD,CAAMP,GAAI,EAAV,UACI,iBAAKF,UAAU,OAAf,WACI,SAAC,KAAD,CAAYG,QAAQ,OAApB,8BACA,SAAC,KAAD,CAAYC,KAAK,WAAWG,YAAY,iBAAiBC,KAAK,sBAK1E,UAAC,KAAD,YACI,SAAC,KAAD,CAAMN,GAAI,EAAV,UACI,iBAAKF,UAAU,OAAf,WACI,UAAC,KAAD,CAAYG,QAAQ,OAApB,mBAAgC,iBAAMH,UAAU,cAAhB,mBAChC,SAAC,KAAD,CAAYI,KAAK,QAAQC,aAAcjF,EAASI,MAAMoF,MAAOL,YAAY,kBAAkBC,KAAK,QAAQC,UAAQ,UAIxH,SAAC,KAAD,CAAMP,GAAI,EAAV,UACI,iBAAKF,UAAU,OAAf,WACI,UAAC,KAAD,CAAYG,QAAQ,OAApB,wBAAqC,iBAAMH,UAAU,cAAhB,mBACrC,SAAC,KAAD,CAAYI,KAAK,MAAMC,aAAcjF,EAASI,MAAMqF,MAAON,YAAY,uBAAuBC,KAAK,QAAQC,UAAQ,aAK/H,iBAAKT,UAAU,OAAf,WACI,UAAC,KAAD,CAAYG,QAAQ,UAApB,qBAAqC,iBAAMH,UAAU,cAAhB,mBACrC,SAAC,KAAD,CAAec,KAAK,IAAIT,aAAcjF,EAASI,MAAMuF,QAASP,KAAK,UAAUC,UAAQ,QAEzF,gBAAKT,UAAU,OAAf,UACI,SAAC,KAAD,CAAME,GAAI,GAAV,UACI,iBAAKF,UAAU,OAAf,WACI,UAAC,KAAD,CAAYG,QAAQ,OAApB,0BAAuC,iBAAMH,UAAU,cAAhB,mBAEvC,UAAC,KAAD,CACIgB,SApIT,SAAC9D,GACxB,IAAIX,EAAQW,EAAEG,OAAOd,MACjBb,EAAWJ,EAAc2F,QAAO,SAACC,GAAD,OAAWA,EAAKC,aAAe5E,CAA/B,IAChCb,EAAS0F,QAAU,IAEvBzF,EAAYY,GACZN,EAAeP,EAAS,IAC3B,EA8HmC8E,KAAK,eACLjE,MAAOb,EAEP+E,UAAQ,EALZ,WAMI,mBAAQlE,MAAO,GAAI8E,QAAM,EAAzB,qCACC/F,EAAcgG,KAAI,SAACJ,EAAMK,GAAP,OACf,mBAAQhF,MAAO2E,EAAKC,WAApB,SAA6CD,EAAKV,MAAbe,EADtB,eAOnC,iBAAKvB,UAAU,cAAf,WACI,UAAC,KAAD,CAAYG,QAAQ,MAApB,6BAAyC,wEAA2D,iBAAMH,UAAU,cAAhB,mBACpG,UAAC,KAAD,YACI,UAAC,KAAD,CAAMwB,IAAE,EAAR,WACI,SAAC,KAAD,CAAYpB,KAAK,SAASqB,KAAM,KAAYlF,MAAOP,EAAYJ,QAAS8F,UAAQ,EAACnB,YAAY,qBAAqBC,KAAK,UAAU,aAAW,qBAAqBmB,IAAK,QAASC,IAAK,QAASnB,UAAQ,KACrM,iBAAMT,UAAU,aAAhB,oFAHR,MAMI,UAAC,KAAD,CAAMwB,IAAE,EAAR,WACI,SAAC,KAAD,CAAYpB,KAAK,SAASqB,KAAM,KAAYlF,MAAOP,EAAYH,QAAS6F,UAAQ,EAACnB,YAAY,qBAAqBC,KAAK,UAAU,aAAW,qBAAqBmB,IAAK,QAASC,IAAK,QAASnB,UAAQ,KACrM,iBAAMT,UAAU,aAAhB,2FAKZ,iBAAKA,UAAU,cAAf,WACI,UAAC,KAAD,CAAYG,QAAQ,MAApB,6BAAyC,6EAAgE,iBAAMH,UAAU,cAAhB,mBACzG,UAAC,KAAD,YACI,UAAC,KAAD,CAAMwB,IAAE,EAAR,WACI,SAAC,KAAD,CAAYpB,KAAK,SAASqB,KAAM,KAAYlF,MAAOP,EAAYF,QAAS4F,UAAQ,EAACnB,YAAY,sBAAsBC,KAAK,UAAU,aAAW,sBAAsBoB,KAAM,QAASD,KAAM,SAAUlB,UAAQ,KAC1M,iBAAMT,UAAU,aAAhB,wFAHR,MAMI,UAAC,KAAD,CAAMwB,IAAE,EAAR,WACI,SAAC,KAAD,CAAYpB,KAAK,SAASqB,KAAM,KAAYlF,MAAOP,EAAYD,QAAS2F,UAAQ,EAACnB,YAAY,sBAAsBC,KAAK,UAAU,aAAW,sBAAsBoB,KAAM,QAASD,KAAM,SAAUlB,UAAQ,KAC1M,iBAAMT,UAAU,aAAhB,+FASZ,iBAAKA,UAAU,OAAf,WACI,UAAC,KAAD,CAAYG,QAAQ,SAApB,oBAAmC,iBAAMH,UAAU,cAAhB,mBACnC,UAAC,KAAD,CAAaA,UAAU,eAAe,aAAW,yBAAyBQ,KAAK,YAAYC,UAAQ,EAACJ,aAAcjF,EAASI,MAAM2C,OAAjI,WACI,mBAAQ5B,OAAO,EAAf,qBACA,mBAAQA,OAAO,EAAf,6BAIR,iBAAKyD,UAAU,OAAf,WACI,UAAC,KAAD,CAAYG,QAAQ,MAApB,8BAA0C,iBAAMH,UAAU,cAAhB,mBAC1C,UAAC,KAAD,YACI,SAAC,KAAD,CAAME,GAAI,EAAGF,UAAU,eAAegB,SAAU,SAAC9D,GAAD,OAAO4B,EAAa5B,EAAG,MAAvB,EAAhD,UACI,SAAC,KAAD,CAAYkD,KAAK,QAAQyB,MAAM,iBAAiBrB,KAAK,0BAGrDxF,EAAMsG,KAAI,SAACQ,EAAMP,GACb,OACI,SAAC,KAAD,CAAMrB,GAAI,EAAeF,UAAU,eAAegB,SAAU,SAAC9D,GAAD,OAAO4B,EAAa5B,EAAG4E,EAAKhH,YAA5B,EAA5D,UACI,SAAC,KAAD,CAAYsF,KAAK,QAAQyB,MAAOC,EAAKtB,KAAMA,KAAK,yBADlCe,EAIzB,QAGT,SAAC,KAAD,UAEQ9E,OAAOsF,KAAKjH,GAAawG,KAAI,SAAC9E,EAAK+E,GAC/B,OACI,UAAC,KAAD,CAAMrB,GAAI,GAAgBF,UAAU,qBAAqBgC,MAAO,CAAEC,cAAe,cAAjF,WACI,eAAIjC,UAAU,OAAd,SAAsBxD,KACtB,SAAC,KAAD,UAEQC,OAAOsF,KAAKjH,EAAY0B,IAAM8E,KAAI,SAACY,EAAMC,GACrC,OACI,SAAC,KAAD,CAAMjC,GAAI,EAAWF,UAAU,iBAA/B,UACI,SAAC,KAAD,CAAYI,KAAK,WAAW7D,MAAO2F,EAAML,MAAO/G,EAAY0B,GAAK0F,GAAO1B,KAAK,mBAAmB4B,eAAgBhH,EAASI,MAAM6G,iBAAiBjD,SAAS8C,MAD3IC,EAIzB,OAGT,kBAAMnC,UAAU,aAAhB,WACI,cAAGA,UAAU,wCADjB,+EAbeuB,EAmB1B,UAiBb,gBAAKvB,UAAU,OAAf,UACI,SAAC,KAAD,CAASI,KAAK,SAASkC,MAAM,UAAUtC,UAAU,OAAjD,+BAY3B,C","sources":["components/SubAdminEdit.js"],"sourcesContent":["import React from 'react';\r\nimport { CCard, CCardBody, CForm, CFormInput, CFormLabel, CFormTextarea, CFormSelect, CRow, CCol, CButton, CFormCheck } from \"@coreui/react\";\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport Constants, { setSessionMessage, userToken } from 'src/Constants';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\n/**\r\n * \r\n * @typedef Jurisdiction\r\n * @prop {string} id\r\n * @prop {string} name\r\n * @prop {string} short_name\r\n * @prop {string} max_lat\r\n * @prop {string} min_lat\r\n * @prop {string} max_lon\r\n * @prop {string} min_lon\r\n */\r\n\r\n/**\r\n * @typedef LatLonBound\r\n * @prop {string} max_lat\r\n * @prop {string} min_lat\r\n * @prop {string} max_lon\r\n * @prop {string} min_lon\r\n */\r\n\r\nconst SubAdminEdit = () => {\r\n\r\n    const [permissions, setPermissions] = React.useState({});\r\n    const [roles, setRoles] = React.useState([])\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    /**@type {[Jurisdiction[], React.SetStateAction<Jurisdiction[]>]} */\r\n    const [jurisdictions, setJurisdictions] = React.useState([]);\r\n\r\n    /**@type {string, React.SetStateAction<string>} */\r\n    const [selected, setSelected] = React.useState(location.state.jurisdiction);\r\n\r\n    /**@type {[LatLonBound, React.SetStateAction<LatLonBound>]} */\r\n    const [latlonbound, setLatlonbound] = React.useState({\r\n        max_lat: location.state.max_lat,\r\n        min_lat: location.state.min_lat,\r\n        max_lon: location.state.max_lon,\r\n        min_lon: location.state.min_lon\r\n    })\r\n    const parseFormtoJson = (form) => {\r\n        let output = {};\r\n        new FormData(form).forEach(\r\n            (value, key) => {\r\n                // Check if property already exist\r\n                if (Object.prototype.hasOwnProperty.call(output, key)) {\r\n                    let current = output[key];\r\n                    if (!Array.isArray(current)) {\r\n                        // If it's not an array, convert it to an array.\r\n                        current = output[key] = [current];\r\n                    }\r\n                    current.push(value); // Add the new value to the array.\r\n                } else {\r\n                    output[key] = value;\r\n                }\r\n            }\r\n        );\r\n        return output;\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let data = parseFormtoJson(e.target);\r\n        // console.log(data);\r\n\r\n        data.is_active = data.is_active === \"true\" ? true : false;\r\n        // console.log(data);\r\n\r\n        let url = Constants.subAdminEdit + location.state.id;\r\n        let response = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': userToken(),\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        let json = await response.json();\r\n        // console.log(json);\r\n\r\n        if (json.status === 200) {\r\n            e.target.reset();\r\n            navigate('/subadmin/list');\r\n\r\n            if (\"_token\" in json) {\r\n                const d = new Date();\r\n                d.setTime(d.getTime() + (365 * 24 * 60 * 60 * 1000));\r\n                document.cookie = `_token=${json._token};expires=${d.toUTCString()};path=\"/\"`;\r\n            }\r\n\r\n            setSessionMessage('success', 'Record Updated Successfully');\r\n        }\r\n\r\n    }\r\n    const handleJurisdiction = (e) => {\r\n        let value = e.target.value;\r\n        let selected = jurisdictions.filter((item) => (item.short_name === value))\r\n        if (selected.length <= 0) return;\r\n\r\n        setSelected(value);\r\n        setLatlonbound(selected[0]);\r\n    }\r\n    const checkTargets = (e, arr) => {\r\n        let checkBox = document.querySelectorAll('[name=\"user_permissions\"]')\r\n        if (arr === 'all') {\r\n            checkBox.forEach((check) => {\r\n                check.checked = e.target.checked\r\n            })\r\n            return\r\n        }\r\n        checkBox.forEach((check) => {\r\n            check.checked = false;\r\n            if (arr.includes(check.value)) {\r\n                check.checked = e.target.checked\r\n            }\r\n        })\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        (async () => {\r\n            let url = Constants.userPermissions;\r\n            let response = await fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': userToken(),\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            let json = await response.json();\r\n            setPermissions(json.data);\r\n            setRoles(json.roles);\r\n        })();\r\n        (async () => {\r\n            let response = await fetch(Constants.jurisdictionList + `?per_page=100&page_number=1`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': userToken(),\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            let payload = await response.json()\r\n            setJurisdictions(payload.data);\r\n        })();\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                theme=\"colored\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover />\r\n            <CCard className=\"my-2\">\r\n                <CCardBody>\r\n                    <h5 className=\"d-inline text-uppercase\">Sub-Admin Edit</h5>\r\n                    {/* <Link to=\"/subadmin/list\" className=\"btn text-uppercase btn-sm px-4  btn-primary float-right\">Back</Link> */}\r\n                </CCardBody>\r\n            </CCard>\r\n\r\n            <CCard>\r\n                <CCardBody>\r\n                    <CForm onSubmit={handleSubmit}>\r\n                        <CRow>\r\n                            <CCol md={6}>\r\n                                <div className=\"mb-3\">\r\n                                    <CFormLabel htmlFor=\"name\">First Name<span className=\"text-danger\">*</span></CFormLabel>\r\n                                    <CFormInput type=\"text\" defaultValue={location.state.first_name} placeholder=\"Enter First Name\" name=\"first_name\" required />\r\n                                </div>\r\n                            </CCol>\r\n                            <CCol md={6}>\r\n                                <div className=\"mb-3\">\r\n                                    <CFormLabel htmlFor=\"name\">Last Name<span className=\"text-danger\">*</span></CFormLabel>\r\n                                    <CFormInput type=\"text\" defaultValue={location.state.last_name} placeholder=\"Enter Last Name\" name=\"last_name\" required />\r\n                                </div>\r\n                            </CCol>\r\n                        </CRow>\r\n\r\n                        <CRow>\r\n                            <CCol md={6}>\r\n                                <div className=\"mb-3\">\r\n                                    <CFormLabel htmlFor=\"name\">User Name<span className=\"text-danger\">*</span></CFormLabel>\r\n                                    <CFormInput type=\"text\" defaultValue={location.state.username} placeholder=\"Enter User Name\" name=\"username\" required />\r\n                                </div>\r\n                            </CCol>\r\n                            <CCol md={6}>\r\n                                <div className=\"mb-3\">\r\n                                    <CFormLabel htmlFor=\"name\">Change Password</CFormLabel>\r\n                                    <CFormInput type=\"password\" placeholder=\"Enter Password\" name=\"password\" />\r\n                                </div>\r\n                            </CCol>\r\n                        </CRow>\r\n\r\n                        <CRow>\r\n                            <CCol md={6}>\r\n                                <div className=\"mb-3\">\r\n                                    <CFormLabel htmlFor=\"name\">Email<span className=\"text-danger\">*</span></CFormLabel>\r\n                                    <CFormInput type=\"email\" defaultValue={location.state.email} placeholder=\"Enter Your Name\" name=\"email\" required />\r\n                                </div>\r\n                            </CCol>\r\n\r\n                            <CCol md={6}>\r\n                                <div className=\"mb-3\">\r\n                                    <CFormLabel htmlFor=\"name\">Contact No<span className=\"text-danger\">*</span></CFormLabel>\r\n                                    <CFormInput type=\"tel\" defaultValue={location.state.phone} placeholder=\"Enter Contact Number\" name=\"phone\" required />\r\n                                </div>\r\n                            </CCol>\r\n\r\n                        </CRow>\r\n                        <div className=\"mb-3\">\r\n                            <CFormLabel htmlFor=\"address\">Address<span className=\"text-danger\">*</span></CFormLabel>\r\n                            <CFormTextarea rows=\"3\" defaultValue={location.state.address} name=\"address\" required></CFormTextarea>\r\n                        </div>\r\n                        <div className='mb-3'>\r\n                            <CCol md={12}>\r\n                                <div className=\"mb-3\">\r\n                                    <CFormLabel htmlFor=\"name\">Jurisdiction<span className=\"text-danger\">*</span></CFormLabel>\r\n                                    {/* <CFormInput type=\"text\" placeholder=\"Enter Jurisdiction\" name=\"jurisdiction\" required /> */}\r\n                                    <CFormSelect\r\n                                        onChange={handleJurisdiction}\r\n                                        name='jurisdiction'\r\n                                        value={selected}\r\n\r\n                                        required>\r\n                                        <option value={''} hidden>--Select Jurisdiction--</option>\r\n                                        {jurisdictions.map((item, index) => (\r\n                                            <option value={item.short_name} key={index}>{item.name}</option>\r\n                                        ))}\r\n                                    </CFormSelect>\r\n                                </div>\r\n                            </CCol>\r\n                        </div>\r\n                        <div className=\"mb-3 d-none\">\r\n                            <CFormLabel htmlFor=\"lat\">Latitude Range <span>(Latitude Range : &gt; 25.8419 & &lt; 36.5008)</span><span className=\"text-danger\">*</span></CFormLabel>\r\n                            <CRow>\r\n                                <CCol xs>\r\n                                    <CFormInput type=\"number\" step={0.00000001} value={latlonbound.max_lat} readOnly placeholder=\"Max Latitude Range\" name=\"max_lat\" aria-label=\"Max Latitude Range\" min={25.8419} max={36.5008} required />\r\n                                    <span className='error_text'>It should be a valid Texus Latitude (Range : &gt; 25.8419 & &lt; 36.5008)</span>\r\n                                </CCol>\r\n                                to\r\n                                <CCol xs>\r\n                                    <CFormInput type=\"number\" step={0.00000001} value={latlonbound.min_lat} readOnly placeholder=\"Min Latitude Range\" name=\"min_lat\" aria-label=\"Min Latitude Range\" min={25.8419} max={36.5008} required />\r\n                                    <span className='error_text'>It should be a valid Texus Latitude (Range : &gt; 25.8419 & &lt; 36.5008)</span>\r\n                                </CCol>\r\n                            </CRow>\r\n                            {/* <CFormInput type=\"text\" placeholder=\"Enter Your Name\" name=\"lat\" required /> */}\r\n                        </div>\r\n                        <div className=\"mb-3 d-none\">\r\n                            <CFormLabel htmlFor=\"lon\">Longitude Range<span> (Longitude Range : &gt; -106.6168 & &lt; -93.5074)</span><span className=\"text-danger\">*</span></CFormLabel>\r\n                            <CRow>\r\n                                <CCol xs>\r\n                                    <CFormInput type=\"number\" step={0.00000001} value={latlonbound.max_lon} readOnly placeholder=\"Max Longitude Range\" name=\"max_lon\" aria-label=\"Max Longitude Range\" max={-93.5074} min={-106.6168} required />\r\n                                    <span className='error_text'>It should be a valid Texus Longitude (Range : &gt; -106.6168 & &lt; -93.5074)</span>\r\n                                </CCol>\r\n                                to\r\n                                <CCol xs>\r\n                                    <CFormInput type=\"number\" step={0.00000001} value={latlonbound.min_lon} readOnly placeholder=\"Min Longitude Range\" name=\"min_lon\" aria-label=\"Min Longitude Range\" max={-93.5074} min={-106.6168} required />\r\n                                    <span className='error_text'>It should be a valid Texus Longitude (Range : &gt; -106.6168 & &lt; -93.5074)</span>\r\n                                </CCol>\r\n                            </CRow>\r\n                            {/* <CFormInput type=\"text\" placeholder=\"Enter Your Name\" name=\"lon\" required /> */}\r\n                        </div>\r\n                        {/* <div className=\"mb-3\">\r\n                            <CFormLabel htmlFor=\"comment\">Comments</CFormLabel>\r\n                            <CFormTextarea rows=\"3\" name=\"comment\"></CFormTextarea>\r\n                        </div> */}\r\n                        <div className=\"mb-3\">\r\n                            <CFormLabel htmlFor=\"status\">Status<span className=\"text-danger\">*</span></CFormLabel>\r\n                            <CFormSelect className='form-control' aria-label=\"Default select example\" name=\"is_active\" required defaultValue={location.state.status}>\r\n                                <option value={true}>Active</option>\r\n                                <option value={false}>Inactive</option>\r\n                            </CFormSelect>\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <CFormLabel htmlFor=\"lon\">User Permissions<span className=\"text-danger\">*</span></CFormLabel>\r\n                            <CRow>\r\n                                <CCol md={3} className=\"my-3 fw-bold\" onChange={(e) => checkTargets(e, 'all')}>\r\n                                    <CFormCheck type=\"radio\" label=\"All Privileges\" name='default_permissions' />\r\n                                </CCol>\r\n                                {\r\n                                    roles.map((role, index) => {\r\n                                        return (\r\n                                            <CCol md={3} key={index} className=\"my-3 fw-bold\" onChange={(e) => checkTargets(e, role.permissions)}>\r\n                                                <CFormCheck type=\"radio\" label={role.name} name='default_permissions' />\r\n                                            </CCol>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </CRow>\r\n                            <CRow>\r\n                                {\r\n                                    Object.keys(permissions).map((key, index) => {\r\n                                        return (\r\n                                            <CCol md={12} key={index} className=\"my-1 perm-box-main\" style={{ textTransform: 'capitalize' }}>\r\n                                                <h6 className='my-2'>{key}</h6>\r\n                                                <CRow>\r\n                                                    {\r\n                                                        Object.keys(permissions[key]).map((perm, i) => {\r\n                                                            return (\r\n                                                                <CCol md={3} key={i} className='permission-box'>\r\n                                                                    <CFormCheck type=\"checkbox\" value={perm} label={permissions[key][perm]} name=\"user_permissions\" defaultChecked={location.state.user_permissions.includes(perm)} />\r\n                                                                </CCol>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </CRow>\r\n                                                <span className='error_text'>\r\n                                                    <i className='fa-solid fa-exclamation-circle me-2'></i>\r\n                                                    You must check first permission to make other permissions work properly\r\n                                                </span>\r\n                                            </CCol>\r\n                                        )\r\n                                    })\r\n                                }\r\n\r\n                                {/* {\r\n                                    UserPermissions.map((usp, index) => {\r\n                                        return (\r\n\r\n                                            <CCol md={6} key={index} className=\"my-1\" style={{ textTransform: 'capitalize' }}>\r\n                                                <CFormCheck type=\"checkbox\" value={usp} label={usp.replace('_', ' ')} name=\"user_permissions\" />\r\n                                            </CCol>\r\n\r\n                                        )\r\n                                    })\r\n                                } */}\r\n                            </CRow>\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <CButton type='submit' color=\"primary\" className=\"px-4\">\r\n                                Update\r\n                            </CButton>\r\n                        </div>\r\n                    </CForm>\r\n                </CCardBody>\r\n            </CCard>\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\nexport default SubAdminEdit;"],"names":["React","permissions","setPermissions","roles","setRoles","navigate","useNavigate","location","useLocation","jurisdictions","setJurisdictions","state","jurisdiction","selected","setSelected","max_lat","min_lat","max_lon","min_lon","latlonbound","setLatlonbound","parseFormtoJson","form","output","FormData","forEach","value","key","Object","prototype","hasOwnProperty","call","current","Array","isArray","push","handleSubmit","e","preventDefault","data","target","is_active","url","Constants","id","fetch","method","headers","userToken","body","JSON","stringify","response","json","status","reset","d","Date","setTime","getTime","document","cookie","_token","toUTCString","setSessionMessage","checkTargets","arr","checkBox","querySelectorAll","check","checked","includes","payload","position","theme","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","className","onSubmit","md","htmlFor","type","defaultValue","first_name","placeholder","name","required","last_name","username","email","phone","rows","address","onChange","filter","item","short_name","length","hidden","map","index","xs","step","readOnly","min","max","label","role","keys","style","textTransform","perm","i","defaultChecked","user_permissions","color"],"sourceRoot":""}