{"version":3,"file":"static/js/2133.5fdecb79.chunk.js","mappings":"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","sources":["components/CameraAdd.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React from 'react';\r\nimport * as L from \"leaflet\";\r\nimport { CCard, CCardBody, CForm, CFormInput, CFormSelect, CFormLabel, CFormTextarea, CFormSwitch, CButton } from \"@coreui/react\";\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Constants, { setSessionMessage, userToken } from 'src/Constants';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { useUserStore } from 'src/userStore';\r\nimport Sniper from '../assets/images/sniper.png';\r\n\r\n\r\nconst getMiddle = (prop, markers) => {\r\n    let values = markers.map(m => m[prop]);\r\n    let min = Math.min(...values);\r\n    let max = Math.max(...values);\r\n    if (prop === 'lon' && (max - min > 180)) {\r\n        values = values.map(val => val < max - 180 ? val + 360 : val);\r\n        min = Math.min(...values);\r\n        max = Math.max(...values);\r\n    }\r\n    let result = (min + max) / 2;\r\n    if (prop === 'lon' && result > 180) {\r\n        result -= 360\r\n    }\r\n    return result;\r\n}\r\n\r\nconst findCenter = (markers) => {\r\n    return {\r\n        lat: getMiddle('lat', markers),\r\n        lon: getMiddle('lon', markers)\r\n    }\r\n}\r\n\r\n\r\nconst CameraAdd = () => {\r\n\r\n    const user = useUserStore((state) => state.user);\r\n    const [latlon, setLatlon] = React.useState({ lat: undefined, lon: undefined });\r\n    const zoom = React.useRef(15);\r\n    const navigate = useNavigate();\r\n    const [jurisdictions, setJurisdictions] = React.useState([]);\r\n\r\n    const [isActive, setActive] = React.useState(false);\r\n    const [loading, setLoading] = React.useState({});\r\n\r\n    const parseFormtoJson = (form) => {\r\n        let formData = new FormData(form);\r\n        let data = {}\r\n        for (let keyValue of formData) {\r\n            data[keyValue[0]] = keyValue[1]\r\n        }\r\n\r\n        return data;\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let data = parseFormtoJson(e.target);\r\n        data.status = parseInt(data.status)\r\n        data.lat = parseFloat(data.lat)\r\n        data.lon = parseFloat(data.lon)\r\n\r\n        let url = Constants.createCameras;\r\n        let response = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': userToken(),\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        let json = await response.json();\r\n\r\n        if (json.status === 200) {\r\n            navigate('/cameras')\r\n            setSessionMessage('success', 'Record Inserted Successfully')\r\n\r\n        }\r\n    }\r\n\r\n    const toggleClass = () => {\r\n        setActive(!isActive);\r\n        setLoading({});\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        let centerPoint = findCenter([{ lat: user.max_lat, lon: user.max_lon }, { lat: user.min_lat, lon: user.min_lon }])\r\n        let map = L.map(\"map\").setView([latlon.lat || centerPoint.lat, latlon.lon || centerPoint.lon], zoom.current);\r\n        L.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png?lang=en\", {}).addTo(map);\r\n        map.on('zoomend', (e) => {\r\n            zoom.current = map.getZoom();\r\n        })\r\n        let marker = L.marker([latlon.lat || centerPoint.lat, latlon.lon || centerPoint.lon], {\r\n            draggable: true,\r\n            icon: L.icon({\r\n                iconUrl: Sniper,\r\n                iconSize: [50, 50],\r\n                iconAnchor: [0, 0],\r\n            })\r\n        }).on('dragend', () => {\r\n            let { lat, lng } = marker.getLatLng()\r\n            if (lat > user.max_lat || lat < user.min_lat || lng > user.max_lon || lng < user.min_lon) {\r\n                setLatlon({ ...latlon })\r\n                return;\r\n            }\r\n\r\n            setLatlon({ lat: lat.toFixed(4), lon: lng.toFixed(4) })\r\n        }).addTo(map)\r\n        return () => {\r\n            map.remove()\r\n        }\r\n    }, [latlon, user, loading])\r\n    React.useEffect(() => {\r\n        (async () => {\r\n            let response = await fetch(Constants.jurisdictionList + `?per_page=100&page_number=1`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': userToken(),\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            let payload = await response.json()\r\n            setJurisdictions(payload.data);\r\n        })();\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                theme=\"colored\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover />\r\n            <CCard className=\"my-2\">\r\n                <CCardBody>\r\n                    <h5 className=\"d-inline text-uppercase\">Add Cameras</h5>\r\n                    <Link to=\"/cameras\" className=\"btn text-uppercase btn-sm px-4  btn-primary float-right\">Back</Link>\r\n                </CCardBody>\r\n            </CCard>\r\n\r\n            <CCard>\r\n                <CCardBody>\r\n                    <CForm onSubmit={handleSubmit}>\r\n                        <div className=\"mb-3\">\r\n                            <CFormLabel htmlFor=\"name\">Jurisdiction<span className=\"text-danger\">*</span></CFormLabel>\r\n                            {/* <CFormInput type=\"text\" placeholder=\"Enter Jurisdiction\" name=\"jurisdiction\" required /> */}\r\n                            <CFormSelect\r\n                                className='form-control'\r\n                                name='jurisdiction'\r\n                                required>\r\n                                {jurisdictions.map((item, index) => (\r\n                                    <option value={item.short_name} key={index}>{item.name}</option>\r\n                                ))}\r\n                            </CFormSelect>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <CFormLabel htmlFor=\"name\">Display Name<span className=\"text-danger\">*</span></CFormLabel>\r\n                            <CFormInput type=\"text\" placeholder=\"Enter the Display Name\" name=\"name\" required />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <CFormLabel htmlFor=\"address\">Address<span className=\"text-danger\">*</span></CFormLabel>\r\n                            <CFormTextarea rows=\"3\" name=\"address\" required></CFormTextarea>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <CFormLabel htmlFor=\"name\">Camera Id<span className=\"text-danger\">*</span></CFormLabel>\r\n                            <CFormInput type=\"text\" placeholder=\"Unique Camera Id.\" name=\"unique_id\" required />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            {/* <CFormLabel htmlFor=\"name\">Display on Frontend<span className=\"text-danger\">*</span></CFormLabel> */}\r\n                            <CFormSwitch size=\"xl\" name='display_status' value=\"true\" label=\"Display on Frontend\" onChange={toggleClass} />\r\n                        </div>\r\n\r\n                        <div className={!isActive ? \"d-none\" : \"\"}>\r\n\r\n                            <div className=\"mb-3\">\r\n                                <CFormLabel htmlFor=\"lat\">Latitude<span></span> (Allowed Range : &gt; {user.min_lat} & &lt; {user.max_lat})<span className=\"text-danger\">*</span></CFormLabel>\r\n                                <CFormInput type=\"number\" placeholder=\"Enter Latitude\" step={0.00000001} min={user.min_lat} max={user.max_lat} name=\"lat\" onChange={(e) => setLatlon((p) => { return { ...p, lat: e.target.value } })} value={latlon.lat} required={isActive} />\r\n                                <span className='error_text'>It should be a valid  Latitude (Allowed Range : &gt; {user.min_lat} & &lt; {user.max_lat})</span>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <CFormLabel htmlFor=\"lon\">Longitude <span> (Allowed Range : &gt; {user.min_lon} & &lt; {user.max_lon})</span><span className=\"text-danger\">*</span></CFormLabel>\r\n                                <CFormInput type=\"number\" placeholder=\"Enter Longitude\" step={0.00000001} max={user.max_lon} min={user.min_lon} name=\"lon\" onChange={(e) => setLatlon((p) => { return { ...p, lon: e.target.value } })} value={latlon.lon} required={isActive} />\r\n                                <span className='error_text'>It should be a valid Longitude (Allowed Range : &gt; {user.min_lon} & &lt; {user.max_lon})</span>\r\n                            </div>\r\n\r\n                            <div className=\"mb-3\">\r\n                                <div id=\"map\"></div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div className=\"mb-3\">\r\n                            <CButton type='submit' color=\"primary\" className=\"px-4\">\r\n                                Create\r\n                            </CButton>\r\n                        </div>\r\n                    </CForm>\r\n                </CCardBody>\r\n            </CCard>\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\nexport default CameraAdd;","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["getMiddle","prop","markers","values","map","m","min","Math","max","val","result","user","useUserStore","state","React","lat","undefined","lon","latlon","setLatlon","zoom","navigate","useNavigate","jurisdictions","setJurisdictions","isActive","setActive","loading","setLoading","parseFormtoJson","form","formData","FormData","data","keyValue","handleSubmit","e","preventDefault","target","status","parseInt","parseFloat","url","Constants","fetch","method","headers","userToken","body","JSON","stringify","response","json","setSessionMessage","centerPoint","max_lat","max_lon","min_lat","min_lon","L","setView","current","addTo","on","getZoom","marker","draggable","icon","iconUrl","Sniper","iconSize","iconAnchor","getLatLng","lng","toFixed","remove","payload","position","theme","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","pauseOnHover","className","to","onSubmit","htmlFor","name","required","item","index","value","short_name","type","placeholder","rows","size","label","onChange","step","p","id","color","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","call","next","_e2"],"sourceRoot":""}