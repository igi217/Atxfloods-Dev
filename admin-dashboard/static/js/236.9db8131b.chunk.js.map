{"version":3,"file":"static/js/236.9db8131b.chunk.js","mappings":"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","sources":["components/ActionButton.js","views/widgets/Trafic.jsx","views/dashboard/TraficInfo.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useUserStore } from 'src/userStore';\r\nconst ActionButton = (props) => {\r\n    const hasPerm = useUserStore((state) => state.hasPerm)\r\n    let prefix = React.useMemo(() => {\r\n        return props.prefix\r\n    }, [props.prefix])\r\n    return (\r\n        <>\r\n            {\r\n                (props.onChangeStatus) ? <span data-title=\"Change Status\" className={`${!hasPerm(`status_${prefix}`) ? 'disabled' : \"\"}`}><i className=\"me-2 fa-solid fa-check-circle text-primary pointer\" onClick={props.onChangeStatus}></i></span> : ''\r\n            }\r\n            {\r\n                (props.onView) ? <span data-title=\"View Data\" className={`${!hasPerm(`view_${prefix}`) ? 'disabled' : \"\"}`}><i className=\"fa-solid fa-eye pointer me-2 text-info\" onClick={props.onView}></i></span> : ''\r\n            }\r\n\r\n            {\r\n                (props.onEdit) ? <span data-title=\"Edit Data\" className={`${!hasPerm(`change_${prefix}`) ? 'disabled' : \"\"}`}><i className=\"fa-solid fa-pen-to-square pointer me-2 text-warning\" onClick={props.onEdit}></i></span> : ''\r\n            }\r\n\r\n            {\r\n                (props.onDelete) ? <span data-title=\"Delete Data\" className={`mx-3 ${!hasPerm(`delete_${prefix}`) ? 'disabled' : \"\"}`}><i className=\" fa-solid fa-trash pointer text-danger\" onClick={props.onDelete}></i></span> : <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActionButton;","import React from 'react'\r\nimport Constants, { userToken } from \"src/Constants\";\r\nimport { DateRangePicker } from 'rsuite';\r\nimport DataTable from \"react-data-table-component\";\r\nimport 'rsuite/dist/rsuite.min.css';\r\nimport { CButton, CCard, CCardBody } from '@coreui/react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ActionButton from 'src/components/ActionButton';\r\n// import { useUserStore } from 'src/userStore';\r\n\r\nconst { afterToday } = DateRangePicker\r\nconst Trafic = () => {\r\n\r\n    // const hasPerm = useUserStore((state) => state.hasPerm);\r\n    const navigate = useNavigate()\r\n    const [data, setData] = React.useState([])\r\n    const [total, setTotal] = React.useState(null)\r\n    const [pagination, setPagination] = React.useState({\r\n        per_page: 100,\r\n        page_number: 1\r\n    })\r\n    const columns = [\r\n        {\r\n            name: 'Session Id',\r\n            selector: row => row.id,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'IP Address',\r\n            selector: row => row.ip_address,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Location',\r\n            selector: row => row.location,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Status',\r\n            selector: row => <span className={`status-${!row.closed_at ? 'open' : 'closed'}`}>{!row.closed_at ? 'Active' : 'Innactive'}</span>,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Entered At',\r\n            selector: row => new Date(row.created_at).toLocaleString(),\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Left At',\r\n            selector: row => row.closed_at ? new Date(row.closed_at).toLocaleString() : \"\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Actions',\r\n            selector: row => (<ActionButton\r\n                prefix=\"crossing\" onView={() => navigate(\"/access-details\", { state: { session_id: row.session_id } })}\r\n            />)\r\n        }\r\n    ];\r\n    const [enterTimeRange, setEnterTimeRange] = React.useState(\"\")\r\n    const [leaveTimeRange, setLeaveTimeRange] = React.useState(\"\")\r\n    const [query, setQuery] = React.useState(`~Q(id=None)`)\r\n    React.useEffect(() => {\r\n        let url = Constants.traficReport;\r\n\r\n\r\n        (async () => {\r\n            let response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': userToken(),\r\n\r\n                },\r\n                body: JSON.stringify({\r\n                    query\r\n                })\r\n            })\r\n            let payload = await response.json();\r\n            setData(payload.data)\r\n            setTotal(payload.total)\r\n\r\n\r\n        })();\r\n    }, [query])\r\n    const handleSearch = () => {\r\n        if (enterTimeRange && leaveTimeRange) {\r\n            setQuery(`Q(created_at__range=${enterTimeRange}) & Q(closed_at__range=${leaveTimeRange})`)\r\n        } else if (enterTimeRange) {\r\n            setQuery(`Q(created_at__range=${enterTimeRange})`)\r\n        } else if (leaveTimeRange) {\r\n            setQuery(`Q(closed_at__range=${leaveTimeRange})`)\r\n        } else {\r\n            setQuery(`~Q(id=None)`)\r\n        }\r\n    }\r\n\r\n    async function handleDownload() {\r\n        let url = Constants.traficReport;\r\n        let response = await fetch(url + `?per_page=${pagination.per_page}&page_number=${pagination.page_number}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authorization: userToken()\r\n            },\r\n            body: JSON.stringify({ query })\r\n        })\r\n        let selector = 'data'\r\n        let name = 'traffic.csv'\r\n        let data = await response.json();\r\n        if (data[selector]?.length >= 1) {\r\n            let header = `${Object.keys(data[selector][0]).map((item) => `\"${item}\"`).join(',')}\\n`\r\n            let body = ``\r\n            data[selector].forEach((row) => {\r\n                body += `${Object.values(row).map((item) => `\"${typeof item === \"object\" ? \"\" : item}\"`).join(',')}\\n`\r\n            })\r\n\r\n            let resObjUrl = URL.createObjectURL(new Blob([header + body], { type: 'text/csv' }))\r\n\r\n            let a = document.createElement('a')\r\n            a.href = resObjUrl;\r\n            a.download = name;\r\n            a.click()\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <CCard className=\"my-2\">\r\n                <CCardBody>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4\">\r\n                            <DateRangePicker\r\n                                className='w-100'\r\n                                placeholder=\"Entering Time Range\"\r\n                                format='yyyy-MM-dd HH:mm:ss'\r\n                                disabledDate={afterToday()}\r\n                                onChange={(value) => setEnterTimeRange(JSON.stringify(value?.map((date) => new Date(date).toISOString())) ?? \"\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <DateRangePicker\r\n                                className='w-100'\r\n                                placeholder=\"Leaving Time Range\"\r\n                                format='yyyy-MM-dd HH:mm:ss'\r\n                                disabledDate={afterToday()}\r\n                                onChange={(value) => setLeaveTimeRange(JSON.stringify(value?.map((date) => new Date(date).toISOString())) ?? \"\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <CButton type=\"button\" className=\"float-end w-100\" color=\"primary\" onClick={handleSearch}>Search</CButton>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <CButton type=\"button\" className=\"float-end w-100\" color=\"success\" onClick={handleDownload}>Download CSV</CButton>\r\n                        </div>\r\n                    </div>\r\n                </CCardBody>\r\n\r\n            </CCard >\r\n            <DataTable\r\n                columns={columns}\r\n                data={data}\r\n                pagination\r\n                paginationServer\r\n                paginationPerPage={100}\r\n                paginationRowsPerPageOptions={[100, 50, 30]}\r\n                paginationTotalRows={total}\r\n                onChangeRowsPerPage={(per_page) => setPagination({ ...pagination, per_page })}\r\n                onChangePage={(page_number, per_page) => setPagination({ ...pagination, page_number })}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Trafic\r\n","import Trafic from \"../widgets/Trafic\";\r\nimport React from \"react\";\r\nexport default function TraficInfo() {\r\n    return(\r\n        <Trafic/>\r\n    )\r\n}"],"names":["props","hasPerm","useUserStore","state","prefix","React","onChangeStatus","className","onClick","onView","onEdit","onDelete","afterToday","DateRangePicker","navigate","useNavigate","data","setData","total","setTotal","per_page","page_number","pagination","setPagination","columns","name","selector","row","id","sortable","ip_address","location","closed_at","Date","created_at","toLocaleString","ActionButton","session_id","enterTimeRange","setEnterTimeRange","leaveTimeRange","setLeaveTimeRange","query","setQuery","url","Constants","fetch","method","headers","userToken","body","JSON","stringify","response","json","payload","a","Authorization","length","header","Object","keys","map","item","join","forEach","values","resObjUrl","URL","createObjectURL","Blob","type","document","createElement","href","download","click","placeholder","format","disabledDate","onChange","value","date","toISOString","color","paginationServer","paginationPerPage","paginationRowsPerPageOptions","paginationTotalRows","onChangeRowsPerPage","onChangePage","TraficInfo"],"sourceRoot":""}