{"version":3,"file":"static/js/2226.4922511f.chunk.js","mappings":"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","sources":["components/ActionButton.js","components/ContactTable.js"],"sourcesContent":["import React from 'react';\r\nimport { useUserStore } from 'src/userStore';\r\nconst ActionButton = (props) => {\r\n    const hasPerm = useUserStore((state) => state.hasPerm)\r\n    let prefix = React.useMemo(() => {\r\n        return props.prefix\r\n    }, [props.prefix])\r\n    return (\r\n        <>\r\n            {\r\n                (props.onChangeStatus) ? <span data-title=\"Change Status\" className={`${!hasPerm(`status_${prefix}`) ? 'disabled' : \"\"}`}><i className=\"me-2 fa-solid fa-check-circle text-primary pointer\" onClick={props.onChangeStatus}></i></span> : ''\r\n            }\r\n            {\r\n                (props.onView) ? <span data-title=\"View Data\" className={`${!hasPerm(`view_${prefix}`) ? 'disabled' : \"\"}`}><i className=\"fa-solid fa-eye pointer me-2 text-info\" onClick={props.onView}></i></span> : ''\r\n            }\r\n\r\n            {\r\n                (props.onEdit) ? <span data-title=\"Edit Data\" className={`${!hasPerm(`change_${prefix}`) ? 'disabled' : \"\"}`}><i className=\"fa-solid fa-pen-to-square pointer me-2 text-warning\" onClick={props.onEdit}></i></span> : ''\r\n            }\r\n\r\n            {\r\n                (props.onDelete) ? <span data-title=\"Delete Data\" className={`mx-3 ${!hasPerm(`delete_${prefix}`) ? 'disabled' : \"\"}`}><i className=\" fa-solid fa-trash pointer text-danger\" onClick={props.onDelete}></i></span> : <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActionButton;","import React from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Constants, { downloadCSV, userToken } from \"src/Constants\";\r\nimport { CButton, CCard, CCardBody } from \"@coreui/react\";\r\nimport ActionButton from \"./ActionButton\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst ContactTable = () => {\r\n    const [data, setData] = React.useState([]);\r\n    const [pagination, setPagination] = React.useState({\r\n        per_page: 100,\r\n        page_number: 1\r\n    })\r\n    const [load, setLoad] = React.useState(true)\r\n    const [total, setTotal] = React.useState(0);\r\n\r\n    const handleDelete = async (id) => {\r\n        let confirmation  = window.confirm(\"Do you really want to delete this record?\");\r\n        if(!confirmation) {\r\n            return;\r\n        }\r\n        let url = Constants.deleteContacts + id;\r\n        let response = await fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': userToken(),\r\n\r\n            }\r\n        })\r\n        let json = await response.json();\r\n        if (json.status === 200) {\r\n            setLoad(!load);\r\n            toast.success(\"Record deleted successfully!\");\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: row => row.id,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Name',\r\n            selector: row => row.name,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Email',\r\n            selector: row => row.email,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Phone',\r\n            selector: row => row.phone,\r\n            sortable: true,\r\n        },\r\n\r\n        {\r\n            name: 'Message',\r\n            selector: row => row.message,\r\n            sortable: true,\r\n        },\r\n\r\n        {\r\n            name: 'Submitted At',\r\n            selector: row => new Date(row.created_at).toLocaleString(),\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Action',\r\n            selector: (row) => <ActionButton prefix=\"contact\"  onDelete={() => handleDelete(row.id)} />,\r\n            sortable: true\r\n        }\r\n    ];\r\n\r\n    React.useEffect(() => {\r\n        let url = Constants.contacts;\r\n\r\n\r\n        (async () => {\r\n            let response = await fetch(url + `?per_page=${pagination.per_page}&page_number=${pagination.page_number}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': userToken(),\r\n\r\n                }\r\n            })\r\n            let data = await response.json();\r\n            setData(data.data);\r\n            setTotal(data.total);\r\n\r\n        })()\r\n    }, [pagination, load])\r\n\r\n    async function handleDownload() {\r\n        await downloadCSV(Constants.contacts + `?per_page=10000&page_number=1`, \"messages.csv\", \"data\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                theme=\"colored\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover />\r\n\r\n            <CCard className=\"my-2\">\r\n                <CCardBody>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <h5 className=\"d-inline text-uppercase\">All Contacts</h5>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <CButton className=\"float-end\" onClick={handleDownload}>\r\n                                Download CSV\r\n                            </CButton>\r\n                        </div>\r\n                    </div>\r\n                </CCardBody>\r\n            </CCard>\r\n            <DataTable\r\n                columns={columns}\r\n                data={data}\r\n                pagination\r\n                paginationPerPage={100}\r\n                paginationRowsPerPageOptions={[100, 50, 30]}\r\n                paginationServer\r\n                paginationTotalRows={total}\r\n                onChangeRowsPerPage={(per_page) => setPagination({ ...pagination, per_page })}\r\n                onChangePage={(page_number, per_page) => setPagination({ ...pagination, page_number })}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContactTable;"],"names":["props","hasPerm","useUserStore","state","prefix","React","onChangeStatus","className","onClick","onView","onEdit","onDelete","data","setData","per_page","page_number","pagination","setPagination","load","setLoad","total","setTotal","handleDelete","id","window","confirm","url","Constants","fetch","method","headers","userToken","response","json","status","toast","columns","name","selector","row","sortable","email","phone","message","Date","created_at","toLocaleString","downloadCSV","position","theme","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","paginationPerPage","paginationRowsPerPageOptions","paginationServer","paginationTotalRows","onChangeRowsPerPage","onChangePage"],"sourceRoot":""}