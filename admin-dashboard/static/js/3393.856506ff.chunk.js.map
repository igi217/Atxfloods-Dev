{"version":3,"file":"static/js/3393.856506ff.chunk.js","mappings":"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","sources":["pages/UpdateJurisdiction.jsx"],"sourcesContent":["import React from 'react';\r\nimport { CCard, CCardBody, CForm, CFormInput, CFormLabel, CRow, CCol, CButton } from \"@coreui/react\";\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport Constants, { setSessionMessage, userToken } from 'src/Constants';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nconst UpdateJurisdiction = () => {\r\n\r\n\r\n    const navigate = useNavigate();\r\n    const { state } = useLocation();\r\n\r\n    const parseFormtoJson = (form) => {\r\n        let output = {};\r\n        new FormData(form).forEach(\r\n            (value, key) => {\r\n                // Check if property already exist\r\n                if (Object.prototype.hasOwnProperty.call(output, key)) {\r\n                    let current = output[key];\r\n                    if (!Array.isArray(current)) {\r\n                        // If it's not an array, convert it to an array.\r\n                        current = output[key] = [current];\r\n                    }\r\n                    current.push(value); // Add the new value to the array.\r\n                } else {\r\n                    output[key] = isFinite(value) ? parseFloat(value) : value;\r\n                }\r\n            }\r\n        );\r\n        return output;\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let data = parseFormtoJson(e.target);\r\n        // console.log(data);\r\n\r\n        let url = Constants.jurisdictionUpdate + state.id;\r\n        try {\r\n            let response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': userToken(),\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n            if (response.status !== 200) {\r\n                throw response;\r\n\r\n            }\r\n            let json = await response.json();\r\n\r\n\r\n            if (json.status === 200) {\r\n                e.target.reset();\r\n                navigate('/jurisdictions');\r\n                setSessionMessage('success', 'Record Updated Successfully')\r\n            }\r\n        } catch (err) {\r\n            let body = await err.json()\r\n            toast.error(body.message)\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                theme=\"colored\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover />\r\n            {/* <CCard className=\"my-2\">\r\n                <CCardBody>\r\n                    <h5 className=\"d-inline text-uppercase\">Sub-Admin Add</h5>\r\n                    <Link to=\"/crossings\" className=\"btn text-uppercase btn-sm px-4  btn-primary float-right\">Back</Link>\r\n                </CCardBody>\r\n            </CCard> */}\r\n\r\n            <CCard>\r\n                <CCardBody>\r\n                    <CForm onSubmit={handleSubmit}>\r\n                        <CRow>\r\n                            <CCol md={12}>\r\n                                <div className=\"mb-3\">\r\n                                    <CFormLabel htmlFor=\"name\">Abbreviation<span className=\"text-danger\">*</span></CFormLabel>\r\n                                    <CFormInput type=\"text\" defaultValue={state.short_name} placeholder=\"Enter Abbreviation\" name=\"short_name\" required />\r\n                                </div>\r\n                            </CCol>\r\n                            <CCol md={12}>\r\n                                <div className=\"mb-3\">\r\n                                    <CFormLabel htmlFor=\"name\">Full Name<span className=\"text-danger\">*</span></CFormLabel>\r\n                                    <CFormInput type=\"text\" placeholder=\"Enter Full Name\" name=\"name\" defaultValue={state.name} required />\r\n                                </div>\r\n                            </CCol>\r\n\r\n                        </CRow>\r\n\r\n\r\n                        <div className=\"mb-3\">\r\n                            <CFormLabel htmlFor=\"lat\">Latitude Range <span>(Latitude Range : &gt; 25.8419 & &lt; 36.5008)</span><span className=\"text-danger\">*</span></CFormLabel>\r\n                            <CRow>\r\n                                <CCol xs>\r\n                                    <CFormInput type=\"number\" defaultValue={state.min_lat} placeholder=\"Min Latitude\" step={0.00000001} name=\"min_lat\" min={25.8419} max={36.5008} aria-label=\"Min Latitude Range\" required />\r\n                                    <span className='error_text'>It should be a valid Texus Latitude (Range : &gt; 25.8419 & &lt; 36.5008)</span>\r\n                                </CCol>\r\n                                to\r\n                                <CCol xs>\r\n                                    <CFormInput type=\"number\" defaultValue={state.max_lat} placeholder=\"Max Latitude\" step={0.00000001} name=\"max_lat\" min={25.8419} max={36.5008} aria-label=\"Max Latitude Range\" required />\r\n                                    <span className='error_text'>It should be a valid Texus Latitude (Range : &gt; 25.8419 & &lt; 36.5008)</span>\r\n                                </CCol>\r\n\r\n                            </CRow>\r\n                            {/* <CFormInput type=\"text\" placeholder=\"Enter Your Name\" name=\"lat\" required /> */}\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <CFormLabel htmlFor=\"lon\">Longitude Range<span> (Longitude Range : &gt; -106.6168 & &lt; -93.5074)</span><span className=\"text-danger\">*</span></CFormLabel>\r\n                            <CRow>\r\n                                <CCol xs>\r\n                                    <CFormInput type=\"number\" defaultValue={state.min_lon} placeholder=\"Min Longitude\" step={0.00000001} name=\"min_lon\" max={-93.5074} min={-106.6168} aria-label=\"Min Longitude Range\" required />\r\n                                    <span className='error_text'>It should be a valid Texus Longitude (Range : &gt; -106.6168 & &lt; -93.5074)</span>\r\n                                </CCol>\r\n                                to\r\n                                <CCol xs>\r\n                                    <CFormInput type=\"number\" defaultValue={state.max_lon} placeholder=\"Max Longitude\" step={0.00000001} name=\"max_lon\" max={-93.5074} min={-106.6168} aria-label=\"Max Longitude Range\" required />\r\n                                    <span className='error_text'>It should be a valid Texus Longitude (Range : &gt; -106.6168 & &lt; -93.5074)</span>\r\n                                </CCol>\r\n\r\n                            </CRow>\r\n                            {/* <CFormInput type=\"text\" placeholder=\"Enter Your Name\" name=\"lon\" required /> */}\r\n                        </div>\r\n                        {/* <div className=\"mb-3\">\r\n                            <CFormLabel htmlFor=\"comment\">Comments</CFormLabel>\r\n                            <CFormTextarea rows=\"3\" name=\"comment\"></CFormTextarea>\r\n                        </div> */}\r\n\r\n\r\n                        <div className=\"mb-3\">\r\n                            <CButton type='submit' color=\"primary\" className=\"px-4\">\r\n                                Update\r\n                            </CButton>\r\n                        </div>\r\n                    </CForm>\r\n                </CCardBody>\r\n            </CCard>\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\nexport default UpdateJurisdiction;"],"names":["navigate","useNavigate","state","useLocation","parseFormtoJson","form","output","FormData","forEach","value","key","Object","prototype","hasOwnProperty","call","current","Array","isArray","push","isFinite","parseFloat","handleSubmit","e","preventDefault","data","target","url","Constants","id","fetch","method","headers","userToken","body","JSON","stringify","response","status","json","reset","setSessionMessage","toast","message","position","theme","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","onSubmit","md","className","htmlFor","type","defaultValue","short_name","placeholder","name","required","xs","min_lat","step","min","max","max_lat","min_lon","max_lon","color"],"sourceRoot":""}