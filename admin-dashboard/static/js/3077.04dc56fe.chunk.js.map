{"version":3,"file":"static/js/3077.04dc56fe.chunk.js","mappings":"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","sources":["components/Statistics.js"],"sourcesContent":["import React from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Constants, { userToken } from \"src/Constants\";\r\nimport { CCard, CCardBody, CButton, CFormInput } from \"@coreui/react\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nconst getPreviousDate = () => {\r\n    let date = new Date()\r\n\r\n    return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()-1}`\r\n}\r\nconst Statistics = () => {\r\n\r\n    const [date, setDate] = React.useState(getPreviousDate())\r\n    const [data, setData] = React.useState([]);\r\n    const [pagination, setPagination] = React.useState({\r\n        per_page: 100,\r\n        page_number: 1\r\n    })\r\n    const [total, setTotal] = React.useState(0);\r\n    const handleChange = () => {\r\n\r\n    }\r\n    const columns = [\r\n        {\r\n            name: 'Camera Id',\r\n            selector: row => row.unique_id\r\n        },\r\n        {\r\n            name: 'Date',\r\n            selector: row => new Date(row.date).toLocaleDateString()\r\n        },\r\n\r\n        {\r\n            name: 'Name',\r\n            selector: row => row.name,\r\n            sortable: true,\r\n        },\r\n\r\n        {\r\n            name: 'No. of Images',\r\n            selector: row => row.image,\r\n            sortable: true,\r\n        },\r\n\r\n        {\r\n            name: 'Camera Efficiency',\r\n            selector: row => ((row.image / 480) * 100).toFixed(2) + '%',\r\n            sortable: true,\r\n        }\r\n\r\n    ];\r\n\r\n\r\n    React.useEffect(() => {\r\n        let { sessionStorage } = window;\r\n        if (sessionStorage.type && sessionStorage.message) {\r\n            toast[sessionStorage.type](sessionStorage.message)\r\n            sessionStorage.clear()\r\n        }\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        let url = Constants.cameraReport;\r\n\r\n        (async () => {\r\n            let response = await fetch(url + `?per_page=${pagination.per_page}&page_number=${pagination.page_number}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': userToken(),\r\n\r\n                },\r\n                body: JSON.stringify({date})\r\n            })\r\n            let data = await response.json();\r\n            setData(data.data);\r\n            setTotal(data.totalResult);\r\n\r\n\r\n        })()\r\n    }, [pagination, date])\r\n\r\n    const handleSearch = () => {\r\n        let searchDate = document.querySelector('.search-date').value;\r\n\r\n        setDate(searchDate)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                theme=\"colored\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover />\r\n\r\n\r\n            <CCard className=\"my-2\">\r\n                <CCardBody>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <h5 className=\"text-uppercase\">Statistics</h5>\r\n                        </div>\r\n                    </div>\r\n                </CCardBody>\r\n            </CCard>\r\n            <CCard className=\"my-2\">\r\n                <CCardBody>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-5 float-end ms-auto\">\r\n                            <CFormInput type=\"date\" defaultValue={date} placeholder=\"Search..\" className=\"search-date\" max={getPreviousDate()}/>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <CButton type=\"button\" className=\"float-end w-100\" color=\"primary\" onClick={handleSearch}>Search</CButton>\r\n                        </div>\r\n                    </div>\r\n                </CCardBody>\r\n\r\n            </CCard>\r\n            <DataTable\r\n                columns={columns}\r\n                data={data}\r\n                pagination\r\n                onSelectedRowsChange={handleChange}\r\n                paginationServer\r\n                paginationTotalRows={total}\r\n                paginationPerPage={100}\r\n                paginationRowsPerPageOptions={[100, 50, 30]}\r\n                className='camera-table'\r\n                onChangeRowsPerPage={(per_page) => setPagination({ ...pagination, per_page })}\r\n                onChangePage={(page_number, per_page) => setPagination({ ...pagination, page_number })}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Statistics;"],"names":["getPreviousDate","date","Date","getFullYear","getMonth","getDate","React","setDate","data","setData","per_page","page_number","pagination","setPagination","total","setTotal","columns","name","selector","row","unique_id","toLocaleDateString","sortable","image","toFixed","sessionStorage","window","type","message","toast","clear","url","Constants","fetch","method","headers","userToken","body","JSON","stringify","response","json","totalResult","position","theme","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","className","defaultValue","placeholder","max","color","onClick","searchDate","document","querySelector","value","onSelectedRowsChange","paginationServer","paginationTotalRows","paginationPerPage","paginationRowsPerPageOptions","onChangeRowsPerPage","onChangePage"],"sourceRoot":""}