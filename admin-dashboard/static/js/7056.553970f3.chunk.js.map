{"version":3,"file":"static/js/7056.553970f3.chunk.js","mappings":"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","sources":["components/ActionButton.js","components/StatusButton.js","components/CameraTable.js","hooks/Permissions.js"],"sourcesContent":["import React from 'react';\r\nimport { useUserStore } from 'src/userStore';\r\nconst ActionButton = (props) => {\r\n    const hasPerm = useUserStore((state) => state.hasPerm)\r\n    let prefix = React.useMemo(() => {\r\n        return props.prefix\r\n    }, [props.prefix])\r\n    return (\r\n        <>\r\n            {\r\n                (props.onChangeStatus) ? <span data-title=\"Change Status\" className={`${!hasPerm(`status_${prefix}`) ? 'disabled' : \"\"}`}><i className=\"me-2 fa-solid fa-check-circle text-primary pointer\" onClick={props.onChangeStatus}></i></span> : ''\r\n            }\r\n            {\r\n                (props.onView) ? <span data-title=\"View Data\" className={`${!hasPerm(`view_${prefix}`) ? 'disabled' : \"\"}`}><i className=\"fa-solid fa-eye pointer me-2 text-info\" onClick={props.onView}></i></span> : ''\r\n            }\r\n\r\n            {\r\n                (props.onEdit) ? <span data-title=\"Edit Data\" className={`${!hasPerm(`change_${prefix}`) ? 'disabled' : \"\"}`}><i className=\"fa-solid fa-pen-to-square pointer me-2 text-warning\" onClick={props.onEdit}></i></span> : ''\r\n            }\r\n\r\n            {\r\n                (props.onDelete) ? <span data-title=\"Delete Data\" className={`mx-3 ${!hasPerm(`delete_${prefix}`) ? 'disabled' : \"\"}`}><i className=\" fa-solid fa-trash pointer text-danger\" onClick={props.onDelete}></i></span> : <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActionButton;","import React from 'react';\r\nconst StatusButton = (props) => {\r\n    return (\r\n        <>\r\n         {\r\n            props.displayStatus ? <span className=\"text-success text-center\"><i className=\"fa-solid fa-circle-check\"></i></span> : <span className=\"text-danger text-center\"><i className=\"fa-solid fa-circle-xmark\"></i></span>\r\n         }\r\n            \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default StatusButton;","import React from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Constants, { downloadCSV, userToken } from \"src/Constants\";\r\nimport ActionButton from \"./ActionButton\";\r\nimport { CButton, CCard, CCardBody } from \"@coreui/react\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport UserPermissions from \"src/hooks/Permissions\";\r\nimport StatusButton from \"./StatusButton\";\r\n\r\nfunction customSortable(key, rowA, rowB) {\r\n    if (String(rowA[key]).toLocaleLowerCase().replace(/\\W/g, '') < String(rowB[key]).toLocaleLowerCase().replace(/\\W/g, '')) {\r\n        return -1\r\n    }\r\n    if (String(rowA[key]).toLocaleLowerCase().replace(/\\W/g, '') > String(rowB[key]).toLocaleLowerCase().replace(/\\W/g, '')) {\r\n        return 1\r\n    }\r\n\r\n    return 0;\r\n}\r\nconst CameraTable = () => {\r\n\r\n    const navigate = useNavigate();\r\n    const { hasPerm } = UserPermissions();\r\n\r\n    const [data, setData] = React.useState([]);\r\n    const [pagination, setPagination] = React.useState({\r\n        per_page: 100,\r\n        page_number: 1\r\n    })\r\n    const [load, setLoad] = React.useState(true)\r\n    const [total, setTotal] = React.useState(0);\r\n    const handleChange = () => {\r\n\r\n    }\r\n    const columns = [\r\n        {\r\n            name: 'Display Name',\r\n            selector: row => (hasPerm('feed_camera')) ? <Link to={`/camera-details/${row.id}`} className='fw-bold link-dark text-decoration-none'>{row.name}</Link> : <b>{row.name}</b>,\r\n            sortable: true,\r\n            sortFunction: (rowA, rowB) => customSortable('name', rowA, rowB)\r\n\r\n        },\r\n        {\r\n            name: 'Jurisdiction',\r\n            selector: row => <span className=\"text-uppercase\">{row.jurisdiction}</span>,\r\n            sortable: true,\r\n            sortFunction: (rowA, rowB) => customSortable('jurisdiction', rowA, rowB)\r\n        },\r\n        {\r\n            name: 'Address',\r\n            selector: row => row.address,\r\n            sortable: true,\r\n            sortFunction: (rowA, rowB) => customSortable('address', rowA, rowB)\r\n        },\r\n\r\n        {\r\n            name: 'Id',\r\n            selector: row => row.unique_id,\r\n            sortable: true,\r\n            sortFunction: (rowA, rowB) => customSortable('unique_id', rowA, rowB)\r\n        },\r\n        {\r\n            name: 'Display Status',\r\n            selector: row => <StatusButton displayStatus={row.display_status} />,\r\n            sortable: true,\r\n            sortFunction: (rowA, rowB) => customSortable('display_status', rowA, rowB)\r\n        },\r\n        {\r\n            name: 'Last Modified',\r\n            selector: row => new Date(row.updated_at).toLocaleString(),\r\n            sortable: true,\r\n            sortFunction: (rowA, rowB) => customSortable('updated_at', rowA, rowB)\r\n        },\r\n        {\r\n            name: 'Action',\r\n            selector: (row) => <ActionButton prefix=\"camera\" onEdit={() => handleEdit(row)} onDelete={() => handleDelete(row.id)} />,\r\n            sortable: false\r\n        }\r\n    ];\r\n\r\n    // const handleView = (row) => {\r\n    //     navigate('/cameras/view', { state: row });\r\n    // }\r\n\r\n    const handleEdit = (row) => {\r\n        // console.log(row);\r\n        navigate('/cameras/edit', { state: row });\r\n    }\r\n\r\n    const handleDelete = async (id) => {\r\n        let confirmation = window.confirm(\"Do you really want to delete this record?\");\r\n        if (!confirmation) {\r\n            return;\r\n        }\r\n        let url = Constants.deleteCameras + id;\r\n        let response = await fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': userToken(),\r\n\r\n            }\r\n        })\r\n        let json = await response.json();\r\n        if (json.status === 200) {\r\n            setLoad(!load);\r\n            toast.success(\"Record deleted successfully!\");\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        let { sessionStorage } = window;\r\n        if (sessionStorage.type && sessionStorage.message) {\r\n            toast[sessionStorage.type](sessionStorage.message)\r\n            sessionStorage.clear()\r\n        }\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        let url = Constants.cameras;\r\n\r\n\r\n        (async () => {\r\n            let response = await fetch(url + `?per_page=${pagination.per_page}&page_number=${pagination.page_number}&total_images=0`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': userToken(),\r\n\r\n                }\r\n            })\r\n            let data = await response.json();\r\n            setData(data.attributes\r\n            );\r\n            setTotal(data.totalResult);\r\n\r\n\r\n        })()\r\n    }, [pagination, load])\r\n\r\n    async function handleDownload() {\r\n        await downloadCSV(Constants.cameraLists + `?per_page=10000&page_number=1`, \"cameras.csv\", \"data\")\r\n    }\r\n    return (\r\n        <>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                theme=\"colored\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover />\r\n\r\n\r\n            <CCard className=\"my-2\">\r\n                <CCardBody>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <h5 className=\"text-uppercase\">All Cameras</h5>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <Link to=\"/cameras/add\" className=\"btn text-uppercase btn-primary m-2 float-end\">Add</Link>\r\n                            <CButton \r\n                            className=\"float-end m-2\"\r\n                            onClick={handleDownload}>\r\n                                Download CSV\r\n                            </CButton>\r\n                        </div>\r\n                    </div>\r\n                </CCardBody>\r\n            </CCard>\r\n            <DataTable\r\n                columns={columns}\r\n                data={data}\r\n                pagination\r\n                onSelectedRowsChange={handleChange}\r\n                paginationServer\r\n                paginationTotalRows={total}\r\n                paginationPerPage={100}\r\n                paginationRowsPerPageOptions={[100, 50, 30]}\r\n                defaultSortFieldId={1}\r\n                className='camera-table'\r\n                onChangeRowsPerPage={(per_page) => setPagination({ ...pagination, per_page })}\r\n                onChangePage={(page_number, per_page) => setPagination({ ...pagination, page_number })}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CameraTable;","import { useEffect, useState } from \"react\"\r\n\r\nconst UserPermissions = () => {\r\n    const [perm, setperm] = useState([]);\r\n\r\n    useEffect(() => {\r\n       let permissions = window.localStorage.getItem('permissions');\r\n       setperm(JSON.parse(permissions || '[]'))\r\n    }, [])\r\n    const setPerm = (permissions) => {\r\n        window.localStorage.setItem('permissions', JSON.stringify(permissions))\r\n        setperm(permissions)\r\n    }\r\n\r\n    const hasPerm = (permission) => {\r\n        return perm.includes(permission)\r\n    }\r\n\r\n    return {setPerm, hasPerm}\r\n}\r\n\r\nexport default UserPermissions;\r\n"],"names":["props","hasPerm","useUserStore","state","prefix","React","onChangeStatus","className","onClick","onView","onEdit","onDelete","displayStatus","customSortable","key","rowA","rowB","String","toLocaleLowerCase","replace","navigate","useNavigate","UserPermissions","data","setData","per_page","page_number","pagination","setPagination","load","setLoad","total","setTotal","columns","name","selector","row","to","id","sortable","sortFunction","jurisdiction","address","unique_id","display_status","Date","updated_at","toLocaleString","ActionButton","handleEdit","handleDelete","window","confirm","url","Constants","fetch","method","headers","userToken","response","json","status","toast","downloadCSV","sessionStorage","type","message","clear","attributes","totalResult","position","theme","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","onSelectedRowsChange","paginationServer","paginationTotalRows","paginationPerPage","paginationRowsPerPageOptions","defaultSortFieldId","onChangeRowsPerPage","onChangePage","useState","perm","setperm","useEffect","permissions","localStorage","getItem","JSON","parse","setPerm","setItem","stringify","permission","includes"],"sourceRoot":""}