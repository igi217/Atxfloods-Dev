{"version":3,"file":"static/js/5461.efd72dee.chunk.js","mappings":"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","sources":["components/ActionButton.js","components/ChangeStatusModal.js","components/SubAdminTable.js"],"sourcesContent":["import React from 'react';\r\nimport { useUserStore } from 'src/userStore';\r\nconst ActionButton = (props) => {\r\n    const hasPerm = useUserStore((state) => state.hasPerm)\r\n    let prefix = React.useMemo(() => {\r\n        return props.prefix\r\n    }, [props.prefix])\r\n    return (\r\n        <>\r\n            {\r\n                (props.onChangeStatus) ? <span data-title=\"Change Status\" className={`${!hasPerm(`status_${prefix}`) ? 'disabled' : \"\"}`}><i className=\"me-2 fa-solid fa-check-circle text-primary pointer\" onClick={props.onChangeStatus}></i></span> : ''\r\n            }\r\n            {\r\n                (props.onView) ? <span data-title=\"View Data\" className={`${!hasPerm(`view_${prefix}`) ? 'disabled' : \"\"}`}><i className=\"fa-solid fa-eye pointer me-2 text-info\" onClick={props.onView}></i></span> : ''\r\n            }\r\n\r\n            {\r\n                (props.onEdit) ? <span data-title=\"Edit Data\" className={`${!hasPerm(`change_${prefix}`) ? 'disabled' : \"\"}`}><i className=\"fa-solid fa-pen-to-square pointer me-2 text-warning\" onClick={props.onEdit}></i></span> : ''\r\n            }\r\n\r\n            {\r\n                (props.onDelete) ? <span data-title=\"Delete Data\" className={`mx-3 ${!hasPerm(`delete_${prefix}`) ? 'disabled' : \"\"}`}><i className=\" fa-solid fa-trash pointer text-danger\" onClick={props.onDelete}></i></span> : <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActionButton;","import React from 'react';\r\nimport { CModal, CModalBody, CForm, CFormSelect, CButton, CFormTextarea, CFormLabel } from '@coreui/react';\r\nimport Constants, { userToken } from 'src/Constants';\r\nconst ChangeStatusModal = ({ id, setCurrent, setLoad }) => {\r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        let status = document.querySelector('#statusInput').value;\r\n        let comment = document.querySelector('#commentInput').value;\r\n        let body = JSON.stringify({ status, comment  })\r\n        let url = Constants.updateCrossingStatus + id;\r\n\r\n        let response = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': userToken(),\r\n                'Content-Type': 'application/json'\r\n\r\n            },\r\n            body\r\n        })\r\n        let data = await response.json();\r\n\r\n        if (data.status === 200) {\r\n            setLoad((p) => !p)\r\n            setCurrent(null)\r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <CModal\r\n                backdrop={false}\r\n                keyboard={false}\r\n                portal={false}\r\n                visible={id ? true : false}\r\n                alignment=\"center\"\r\n            >\r\n\r\n                <CModalBody>\r\n                    <h6 className='my-3 custom-header'>\r\n                        Update Status\r\n\r\n                        <span onClick={() => setCurrent(null)}>&times;</span>\r\n                    </h6>\r\n                    <CForm>\r\n                        <CFormSelect aria-label=\"Default select example\" id='statusInput'>\r\n                            <option value=\"1\">Open</option>\r\n                            <option value=\"0\">Close</option>\r\n                            <option value=\"2\">Caution</option>\r\n                            <option value=\"3\">Long time closure</option>\r\n                        </CFormSelect>\r\n                        <CFormLabel htmlFor=\"address\">Comments</CFormLabel>\r\n                        <CFormTextarea id=\"commentInput\" rows=\"3\" name=\"comment\"></CFormTextarea>\r\n                        <CButton type='button' className='my-3 px-3' onClick={handleSubmit}>Save</CButton>\r\n\r\n                    </CForm>\r\n\r\n                </CModalBody>\r\n\r\n            </CModal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChangeStatusModal;","import React from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Constants, { downloadCSV, userToken } from \"src/Constants\";\r\nimport ActionButton from \"./ActionButton\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { CCard, CCardBody, CFormInput, CButton } from \"@coreui/react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ChangeStatusModal from \"./ChangeStatusModal\";\r\n\r\nconst SubAdminTable = (props) => {\r\n\r\n    const navigate = useNavigate()\r\n    const [data, setData] = React.useState([]);\r\n    const [pagination, setPagination] = React.useState({\r\n        per_page: 100,\r\n        page_number: 1\r\n    })\r\n    const [filter, setFilter] = React.useState({\r\n        search : '',\r\n        status : ''\r\n    })\r\n    const [current, setCurrent] = React.useState(null)\r\n    const [load, setLoad] = React.useState(true)\r\n    const [total, setTotal] = React.useState(0);\r\n    const columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: row => row.id,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Jurisdiction',\r\n            selector: row => <span className=\"text-uppercase\">{row.jurisdiction}</span>,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'First Name',\r\n            selector: row => row.first_name,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Last Name',\r\n            selector: row => row.last_name,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Username',\r\n            selector: row => row.username,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Email',\r\n            selector: row => row.email,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Contact Number',\r\n            selector: row => <a className=\"fw-bold text-dark text-decoration-none\" href={`tel:${row.phone}`}><i className=\"fa-solid fa-phone me-1\"></i>{row.phone}</a>,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Admin Type',\r\n            selector: row => row.type,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Action',\r\n            selector: (row) => <ActionButton prefix=\"crossing\" onEdit={() => handleEdit(row)} onDelete={() => handleDelete(row.id)} />,\r\n            sortable: true\r\n        }\r\n    ];\r\n\r\n    const handleEdit = (row) => {\r\n        // console.log(row);\r\n        navigate('/subadmin/edit', { state: row });\r\n    }\r\n    const handleDelete = async (id) => {\r\n        let confirmation  = window.confirm(\"Do you really want to delete this record?\");\r\n        if(!confirmation) {\r\n            return;\r\n        }\r\n        let url = Constants.subAdminDelete + id;\r\n        let response = await fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': userToken(),\r\n\r\n            }\r\n        })\r\n        let json = await response.json();\r\n        if (json.status === 200) {\r\n            setLoad(!load);\r\n            toast.success(\"Record deleted successfully!\");\r\n        }\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        let search = document.querySelector('.search-text').value;\r\n        setFilter({search, status: 1})\r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        let { sessionStorage } = window;\r\n        if( sessionStorage.type && sessionStorage.message) {\r\n            toast[sessionStorage.type](sessionStorage.message)\r\n            sessionStorage.clear()\r\n        }\r\n    }, [])\r\n    React.useEffect(() => {\r\n        let url = Constants.subAdminList;\r\n\r\n\r\n        (async () => {\r\n            let response = await fetch(url + `?per_page=${pagination.per_page}&page_number=${pagination.page_number}&search=${filter.search}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': userToken(),\r\n\r\n                }\r\n            })\r\n            let data = await response.json();\r\n            // console.log(data);\r\n            setData(data.data);\r\n            setTotal(data.total);\r\n\r\n\r\n        })()\r\n    }, [pagination, load, filter])\r\n\r\n    async function handleDownload() {\r\n        await downloadCSV(Constants.subAdminList + `?per_page=10000&page_number=1`, \"subadmins.csv\", \"data\")\r\n    }\r\n    return (\r\n        <>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                theme=\"colored\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover />\r\n            <CCard className=\"my-2\">\r\n                <CCardBody>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-5\">\r\n                            <CFormInput type=\"text\" placeholder=\"Search..\" className=\"search-text\"/>\r\n                        </div>\r\n                        {/* <div className=\"col-5\">\r\n                            <CFormSelect className=\"search-status\">\r\n                                <option hidden={true} value=\"\">Select</option>\r\n                                <option value=\"0\">Closed</option>\r\n                                <option value=\"1\">Open</option>\r\n                                <option value=\"2\">Caution</option>\r\n                            </CFormSelect>\r\n                        </div> */}\r\n                        <div className=\"col-2\">\r\n                            <CButton type=\"button\" className=\"float-end w-100\" color=\"primary\" onClick={handleSearch}>Search</CButton>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <CButton type=\"button\" className=\"float-end w-100\" color=\"success\" onClick={handleDownload}>Download CSV</CButton>\r\n                        </div>\r\n                    </div>\r\n                </CCardBody>\r\n\r\n            </CCard>\r\n            <DataTable\r\n                columns={columns}\r\n                data={data}\r\n                pagination\r\n                paginationServer\r\n                paginationTotalRows={total}\r\n                paginationPerPage={100}\r\n                paginationRowsPerPageOptions={[100, 50, 30]}\r\n                onChangeRowsPerPage={(per_page) => setPagination({ ...pagination, per_page })}\r\n                onChangePage={(page_number, per_page) => setPagination({ ...pagination, page_number })}\r\n            />\r\n            <ChangeStatusModal id={current} setCurrent={setCurrent} setLoad={setLoad}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SubAdminTable;"],"names":["props","hasPerm","useUserStore","state","prefix","React","onChangeStatus","className","onClick","onView","onEdit","onDelete","id","setCurrent","setLoad","handleSubmit","status","document","querySelector","value","comment","body","JSON","stringify","url","Constants","fetch","method","headers","userToken","response","json","p","backdrop","keyboard","portal","visible","alignment","htmlFor","rows","name","type","navigate","useNavigate","data","setData","per_page","page_number","pagination","setPagination","search","filter","setFilter","current","load","total","setTotal","columns","selector","row","sortable","jurisdiction","first_name","last_name","username","email","href","phone","handleEdit","handleDelete","window","confirm","toast","downloadCSV","sessionStorage","message","clear","position","theme","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","placeholder","color","paginationServer","paginationTotalRows","paginationPerPage","paginationRowsPerPageOptions","onChangeRowsPerPage","onChangePage"],"sourceRoot":""}