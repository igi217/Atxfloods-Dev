{"version":3,"file":"static/js/9107.94f9320e.chunk.js","mappings":"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","sources":["pages/AccessDetails.jsx"],"sourcesContent":["import React from 'react'\r\nimport Constants, { userToken } from \"src/Constants\";\r\nimport { DateRangePicker } from 'rsuite';\r\nimport DataTable from \"react-data-table-component\";\r\nimport 'rsuite/dist/rsuite.min.css';\r\nimport { CButton, CCard, CCardBody } from '@coreui/react';\r\nimport { useLocation } from 'react-router-dom';\r\n// import { useUserStore } from 'src/userStore';\r\n\r\nconst { afterToday } = DateRangePicker\r\nconst AccessDetail = () => {\r\n\r\n    // const hasPerm = useUserStore((state) => state.hasPerm);\r\n    const { state } = useLocation()\r\n    const [data, setData] = React.useState([])\r\n    const [total, setTotal] = React.useState(null)\r\n    const [pagination, setPagination] = React.useState({\r\n        per_page: 100,\r\n        page_number: 1\r\n    })\r\n    const columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: row => row.id,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'IP Address',\r\n            selector: row => row.ip_address,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Location',\r\n            selector: row => row.location,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: \"Resource/Access\",\r\n            selector: row => row.page,\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Visted At',\r\n            selector: row => new Date(row.created_at).toLocaleString(),\r\n            sortable: true,\r\n        }\r\n    ];\r\n    const [enterTimeRange, setEnterTimeRange] = React.useState(\"\")\r\n    const [leaveTimeRange, setLeaveTimeRange] = React.useState(\"\")\r\n    const [query, setQuery] = React.useState(`Q(session_id=\"${state.session_id}\")`)\r\n    React.useEffect(() => {\r\n        let url = Constants.accessDetails;\r\n\r\n\r\n        (async () => {\r\n            let response = await fetch(url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Authorization': userToken(),\r\n\r\n                },\r\n                body: JSON.stringify({\r\n                    query\r\n                })\r\n            })\r\n            let payload = await response.json();\r\n            setData(payload.data)\r\n            setTotal(payload.total)\r\n\r\n\r\n        })();\r\n    }, [query])\r\n    const handleSearch = () => {\r\n        if (enterTimeRange && leaveTimeRange) {\r\n            setQuery(`Q(session_id=\"${state.session_id}\") & Q(created_at__range=${enterTimeRange}) & Q(closed_at__range=${leaveTimeRange})`)\r\n        } else if (enterTimeRange) {\r\n            setQuery(`Q(session_id=\"${state.session_id}\") & Q(created_at__range=${enterTimeRange})`)\r\n        } else if (leaveTimeRange) {\r\n            setQuery(`Q(session_id=\"${state.session_id}\") & Q(closed_at__range=${leaveTimeRange})`)\r\n        } else {\r\n            setQuery(`Q(session_id=\"${state.session_id}\")`)\r\n        }\r\n    }\r\n\r\n    async function handleDownload() {\r\n        let url = Constants.accessDetails;\r\n        let response = await fetch(url + `?per_page=${pagination.per_page}&page_number=${pagination.page_number}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authorization: userToken()\r\n            },\r\n            body: JSON.stringify({ query })\r\n        })\r\n        let selector = 'data'\r\n        let name = 'traffic.csv'\r\n        let data = await response.json();\r\n        if (data[selector]?.length >= 1) {\r\n            let header = `${Object.keys(data[selector][0]).map((item) => `\"${item}\"`).join(',')}\\n`\r\n            let body = ``\r\n            data[selector].forEach((row) => {\r\n                body += `${Object.values(row).map((item) => `\"${typeof item === \"object\" ? \"\" : item}\"`).join(',')}\\n`\r\n            })\r\n\r\n            let resObjUrl = URL.createObjectURL(new Blob([header + body], { type: 'text/csv' }))\r\n\r\n            let a = document.createElement('a')\r\n            a.href = resObjUrl;\r\n            a.download = name;\r\n            a.click()\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <CCard className=\"my-2\">\r\n                <CCardBody>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4\">\r\n                            <DateRangePicker\r\n                                className='w-100'\r\n                                placeholder=\"Entering Time Range\"\r\n                                format='yyyy-MM-dd HH:mm:ss'\r\n                                disabledDate={afterToday()}\r\n                                onChange={(value) => setEnterTimeRange(JSON.stringify(value?.map((date) => new Date(date).toISOString())) ?? \"\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <DateRangePicker\r\n                                className='w-100'\r\n                                placeholder=\"Leaving Time Range\"\r\n                                format='yyyy-MM-dd HH:mm:ss'\r\n                                disabledDate={afterToday()}\r\n                                onChange={(value) => setLeaveTimeRange(JSON.stringify(value?.map((date) => new Date(date).toISOString())) ?? \"\")}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <CButton type=\"button\" className=\"float-end w-100\" color=\"primary\" onClick={handleSearch}>Search</CButton>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <CButton type=\"button\" className=\"float-end w-100\" color=\"success\" onClick={handleDownload}>Download CSV</CButton>\r\n                        </div>\r\n                    </div>\r\n                </CCardBody>\r\n\r\n            </CCard >\r\n            <DataTable\r\n                columns={columns}\r\n                data={data}\r\n                pagination\r\n                paginationServer\r\n                paginationPerPage={100}\r\n                paginationRowsPerPageOptions={[100, 50, 30]}\r\n                paginationTotalRows={total}\r\n                onChangeRowsPerPage={(per_page) => setPagination({ ...pagination, per_page })}\r\n                onChangePage={(page_number, per_page) => setPagination({ ...pagination, page_number })}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AccessDetail\r\n"],"names":["afterToday","DateRangePicker","state","useLocation","React","data","setData","total","setTotal","per_page","page_number","pagination","setPagination","columns","name","selector","row","id","sortable","ip_address","location","page","Date","created_at","toLocaleString","enterTimeRange","setEnterTimeRange","leaveTimeRange","setLeaveTimeRange","session_id","query","setQuery","url","Constants","fetch","method","headers","userToken","body","JSON","stringify","response","json","payload","a","Authorization","length","header","Object","keys","map","item","join","forEach","values","resObjUrl","URL","createObjectURL","Blob","type","document","createElement","href","download","click","className","placeholder","format","disabledDate","onChange","value","date","toISOString","color","onClick","paginationServer","paginationPerPage","paginationRowsPerPageOptions","paginationTotalRows","onChangeRowsPerPage","onChangePage"],"sourceRoot":""}