{"version":3,"file":"static/js/6487.df2eaa85.chunk.js","mappings":"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","sources":["hooks/Permissions.js","hooks/useUser.js","hooks/UserType.js","views/pages/login/Login.js","../node_modules/@coreui/icons/js/free/cil-user.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\n\r\nconst UserPermissions = () => {\r\n    const [perm, setperm] = useState([]);\r\n\r\n    useEffect(() => {\r\n       let permissions = window.localStorage.getItem('permissions');\r\n       setperm(JSON.parse(permissions || '[]'))\r\n    }, [])\r\n    const setPerm = (permissions) => {\r\n        window.localStorage.setItem('permissions', JSON.stringify(permissions))\r\n        setperm(permissions)\r\n    }\r\n\r\n    const hasPerm = (permission) => {\r\n        return perm.includes(permission)\r\n    }\r\n\r\n    return {setPerm, hasPerm}\r\n}\r\n\r\nexport default UserPermissions;\r\n","import { useEffect, useState } from \"react\"\r\nconst useUser = () => {\r\n    const [user, setUser] = useState({});\r\n    useEffect(() => {\r\n        let user = window.localStorage.getItem('user');\r\n        setUser(JSON.parse(user));\r\n     }, [])\r\n\r\n     const setUserData = (user) => {\r\n        window.localStorage.setItem('user', JSON.stringify(user))\r\n        setUser(user);\r\n     }\r\n\r\n     return {user, setUser:setUserData}\r\n}\r\n\r\nexport default useUser;","import { useEffect, useState } from \"react\"\r\nconst useType = () => {\r\n    const [type, setType] = useState(0);\r\n    useEffect(() => {\r\n        let user = window.localStorage.getItem('is_superuser');\r\n        setType(user);\r\n     }, [])\r\n\r\n     const setUserType = (type) => {\r\n        window.localStorage.setItem('is_superuser', type)\r\n        setType(type);\r\n     }\r\n\r\n     return {type, setUserType}\r\n}\r\n\r\nexport default useType;","import React from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport Constants from 'src/Constants'\nimport userPermissions from 'src/hooks/Permissions'\nimport Logo from 'src/assets/images/atx-logo-back.png'\nimport useUser from 'src/hooks/useUser'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n  CAlert,\n  CImage,\n  CCallout\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport userType from 'src/hooks/UserType'\n\nconst Login = () => {\n\n  const [username, setUsername] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [error, setError] = React.useState(null);\n  const { setPerm } = userPermissions();\n  const { setUserType } = userType();\n  const {setUser} = useUser();\n\n  const navigation = useNavigate()\n\n  React.useEffect(() => {\n    const { cookie } = document;\n    if (cookie.includes('_token=')) {\n      navigation('/dashboard')\n    }\n  }, [navigation])\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    let url = Constants.login;\n    let body = { username, password }\n    let res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': \"application/json\"\n      },\n      body: JSON.stringify(body)\n\n    });\n\n    let data = await res.json()\n    console.log(data)\n    if (data.status !== 200) {\n      setError(data.message); return;\n    }\n    const d = new Date();\n    d.setTime(d.getTime() + (365 * 24 * 60 * 60 * 1000));\n    document.cookie = `_token=${data._token};expires=${d.toUTCString()};path=\"/\"`;\n    setPerm(data.user_permissions);\n    setUserType(data.is_superuser);\n    setUser({name:data.name});\n\n    if(data.last_login === null){\n      navigation('/change-password')\n    } else {\n      navigation('/dashboard')\n    }\n\n\n\n\n  }\n  return (\n    <>\n      <CCol md={2} sm={6} className='p-3'>\n      <a href=\"/\" target=\"_blank\" rel=\"noreferrer\"><CImage src={Logo} className=\"img-fluid\"></CImage></a>\n\n      </CCol>\n      <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n\n        <CContainer>\n\n          <CRow>\n\n          </CRow>\n          <CRow className=\"justify-content-center\">\n            <CCol md={4}>\n              <CCallout color=\"info\" className=\"bg-white\">\n                New to <b>ATX Floods</b> ? <Link to=\"/info\" target=\"_blank\">Click</Link> to know more.\n              </CCallout>\n              <CCardGroup>\n                <CCard className=\"p-4\">\n                  <CCardBody>\n                    {(error) ? <CAlert color=\"danger\">{error}</CAlert> : <></>}\n                    <CForm onSubmit={handleLogin}>\n                      <p className=\"text-center font-weight-bold\">Login to Administrative Dashboard</p>\n                      <CInputGroup className=\"mb-3\">\n                        <CInputGroupText>\n                          <CIcon icon={cilUser} />\n                        </CInputGroupText>\n                        <CFormInput placeholder=\"Username\" autoComplete=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} required={true} />\n                      </CInputGroup>\n                      <CInputGroup className=\"mb-4\">\n                        <CInputGroupText>\n                          <CIcon icon={cilLockLocked} />\n                        </CInputGroupText>\n                        <CFormInput\n                          type=\"password\"\n                          placeholder=\"Password\"\n                          autoComplete=\"current-password\"\n                          value={password} onChange={(e) => setPassword(e.target.value)} required={true} />\n                      </CInputGroup>\n                      <CRow>\n                        <CCol xs={6}>\n                          <CButton type='submit' color=\"primary\" className=\"px-4\">\n                            Login\n                          </CButton>\n                        </CCol>\n                      </CRow>\n                    </CForm>\n                  </CCardBody>\n                </CCard>\n\n              </CCardGroup>\n            </CCol>\n          </CRow>\n        </CContainer>\n      </div>\n    </>\n  )\n}\n\nexport default Login\n","export const cilUser = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M411.6,343.656l-72.823-47.334,27.455-50.334A80.23,80.23,0,0,0,376,207.681V128a112,112,0,0,0-224,0v79.681a80.236,80.236,0,0,0,9.768,38.308l27.455,50.333L116.4,343.656A79.725,79.725,0,0,0,80,410.732V496H448V410.732A79.727,79.727,0,0,0,411.6,343.656ZM416,464H112V410.732a47.836,47.836,0,0,1,21.841-40.246l97.66-63.479-41.64-76.341A48.146,48.146,0,0,1,184,207.681V128a80,80,0,0,1,160,0v79.681a48.146,48.146,0,0,1-5.861,22.985L296.5,307.007l97.662,63.479h0A47.836,47.836,0,0,1,416,410.732Z' class='ci-primary'/>\"]"],"names":["useState","perm","setperm","useEffect","permissions","window","localStorage","getItem","JSON","parse","setPerm","setItem","stringify","hasPerm","permission","includes","user","setUser","type","setType","setUserType","React","username","setUsername","password","setPassword","error","setError","userPermissions","userType","useUser","navigation","useNavigate","document","cookie","handleLogin","e","preventDefault","url","Constants","body","fetch","method","headers","res","json","data","console","log","status","message","d","Date","setTime","getTime","_token","toUTCString","user_permissions","is_superuser","name","last_login","md","sm","className","href","target","rel","src","color","to","onSubmit","icon","cilUser","placeholder","autoComplete","value","onChange","required","cilLockLocked","xs"],"sourceRoot":""}