{"version":3,"file":"static/js/1050.ae8bdad0.chunk.js","mappings":"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","sources":["components/CrossingView.js"],"sourcesContent":["import React from 'react';\r\nimport { CCard, CCardBody, CForm, CFormInput, CFormLabel, CFormTextarea} from \"@coreui/react\";\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport Constants, { userToken } from 'src/Constants';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nconst CrossingView = (props) => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n\r\n    const parseFormtoJson = (form) => {\r\n        let inputs = form.querySelectorAll('.form-control');\r\n        let data = {}\r\n        inputs.forEach((input) => {\r\n            data[input.name] = input.value\r\n        })\r\n        return data;\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let data = parseFormtoJson(e.target);\r\n        data.status = parseInt(data.status)\r\n        data.lat = parseFloat(data.lat)\r\n        data.lon = parseFloat(data.lon)\r\n        // console.log(data)\r\n        let url = Constants.updateCrossing + location.state.id;\r\n        let response = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': userToken(),\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n        let json = await response.json();\r\n\r\n        if (json.status === 200) {\r\n            toast.success(\"Record updated successfully!\");\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                theme=\"colored\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover />\r\n            <CCard className=\"my-2\">\r\n                <CCardBody>\r\n                    <h5 className=\"d-inline text-uppercase\">View Crossing</h5>\r\n                    <span onClick={() => navigate(-1)} className=\"btn text-uppercase btn-sm px-4  btn-primary float-right\">Back</span>\r\n                </CCardBody>\r\n            </CCard>\r\n\r\n            <CCard>\r\n                <CCardBody>\r\n                    <CForm onSubmit={handleSubmit}>\r\n                        <div className=\"mb-3\">\r\n                            <CFormLabel htmlFor=\"name\">Name<span className=\"text-danger\">*</span></CFormLabel>\r\n                            <CFormInput type=\"text\" placeholder=\"Enter Your Name\" name=\"name\" defaultValue={location.state.name} readOnly/>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <CFormLabel htmlFor=\"jurisdiction\">Jurisdiction<span className=\"text-danger\">*</span></CFormLabel>\r\n                            <CFormInput type=\"text\" placeholder=\"Enter Your Name\" name=\"jurisdiction\" defaultValue={location.state.jurisdiction} readOnly/>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <CFormLabel htmlFor=\"address\">Address<span className=\"text-danger\">*</span></CFormLabel>\r\n                            <CFormTextarea rows=\"3\" name=\"address\" defaultValue={location.state.address} readOnly></CFormTextarea>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <CFormLabel htmlFor=\"lat\">Latitude<span className=\"text-danger\">*</span></CFormLabel>\r\n                            <CFormInput type=\"text\" placeholder=\"Enter Your Name\" name=\"lat\" defaultValue={location.state.lat} readOnly/>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <CFormLabel htmlFor=\"lon\">Longitude<span className=\"text-danger\">*</span></CFormLabel>\r\n                            <CFormInput type=\"text\" placeholder=\"Enter Your Name\" name=\"lon\" defaultValue={location.state.lon} readOnly/>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <CFormLabel htmlFor=\"comment\">Comments</CFormLabel>\r\n                            <CFormTextarea rows=\"3\" name=\"comment\" defaultValue={location.state.comment} readOnly></CFormTextarea>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <CFormLabel htmlFor=\"status\">Status<span className=\"text-danger\">*</span></CFormLabel>\r\n                            <CFormInput type=\"text\" placeholder=\"Status\" defaultValue={location.state.status} readOnly/>\r\n                        </div>\r\n                    </CForm>\r\n                </CCardBody>\r\n            </CCard>\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\nexport default CrossingView;"],"names":["props","location","useLocation","navigate","useNavigate","parseFormtoJson","form","inputs","querySelectorAll","data","forEach","input","name","value","handleSubmit","e","preventDefault","target","status","parseInt","lat","parseFloat","lon","url","Constants","state","id","fetch","method","headers","userToken","body","JSON","stringify","response","json","toast","position","theme","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","className","onClick","onSubmit","htmlFor","type","placeholder","defaultValue","readOnly","jurisdiction","rows","address","comment"],"sourceRoot":""}