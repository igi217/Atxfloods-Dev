{"version":3,"file":"static/js/4091.4ce281ec.chunk.js","mappings":"6QAwFA,UApFsB,WAClB,MAA8BA,EAAAA,SAAe,IAA7C,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAY,yCAAG,WAAOC,GAAP,yFACjBA,EAAEC,iBACEC,EAAMC,EAAAA,GAAAA,oBAAgC,SACtCC,EAAOC,KAAKC,UAAU,CAACT,QAAAA,IAHV,SAKIU,MAAML,EAAK,CAC5BM,OAAQ,OACRC,QAAS,CACL,eAAiBC,EAAAA,EAAAA,MACjB,eAAgB,oBAEpBN,KAAAA,IAXa,cAKbO,EALa,gBAcAA,EAASC,OAdT,OAgBE,OAFfC,EAda,QAgBTC,OACJC,EAAAA,GAAAA,QAAcF,EAAKG,SAEnBD,EAAAA,GAAAA,MAAY,yBAnBC,4CAAH,sDA6ClB,OApBAnB,EAAAA,WAAgB,WACZ,IAAIM,EAAMC,EAAAA,GAAAA,cAA0B,UAGpC,uBAAC,6GACwBI,MAAML,EAAI,CAC3BM,OAAQ,MACRC,QAAS,CACL,eAAiBC,EAAAA,EAAAA,SAJ5B,cACOC,EADP,gBAQoBA,EAASC,OAR7B,OAUsB,OAFfC,EARP,QAUWC,QACJhB,EAAU,OAACe,QAAD,IAACA,GAAD,UAACA,EAAMA,YAAP,aAAC,EAAYhB,SAX9B,0CAAD,EAcH,GAAE,KAIC,iCAEI,SAAC,KAAD,CACIoB,SAAS,YACTC,MAAM,UACNC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,KAEhB,SAAC,KAAD,WACI,SAAC,KAAD,WACI,UAAC,KAAD,CAAOC,SAAU5B,EAAjB,WACI,gBAAK6B,UAAU,OAAf,UACA,qBAAUA,UAAU,eAAeC,YAAY,yBAAyBC,MAAOjC,EAASkC,SAAU,SAAC/B,GAAD,OAAOF,EAAWE,EAAEgC,OAAOF,MAA3B,OAGlG,gBAAKF,UAAU,OAAf,UACI,SAAC,KAAD,CAASK,KAAK,SAASC,MAAM,UAAUN,UAAU,OAAjD,+BAY3B,C","sources":["components/WarningNotice.js"],"sourcesContent":["import React from 'react';\r\nimport { CCard, CCardBody, CForm, CButton } from \"@coreui/react\";\r\nimport Constants, { userToken } from 'src/Constants';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nconst WarningNotice = () => {\r\n    const [content, setContent] = React.useState('')\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let url = Constants.staticContentUpdate + 'banner';\r\n        let body = JSON.stringify({content})\r\n        // console.log(body)\r\n        let response = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': userToken(),\r\n                'content-Type': 'application/json'\r\n            },\r\n            body\r\n        })\r\n\r\n        let data = await response.json();\r\n        // console.log(data);\r\n        if(data.status === 200){\r\n            toast.success(data.message);\r\n        } else {\r\n            toast.error('Something Went Wrong!');\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        let url = Constants.staticContent + 'banner';\r\n\r\n\r\n        (async () => {\r\n            let response = await fetch(url,{\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': userToken(),\r\n\r\n                }\r\n            })\r\n            let data = await response.json();\r\n            // console.log(data);\r\n            if(data.status === 200){\r\n                setContent(data?.data?.content);\r\n            }\r\n        })()\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                theme=\"colored\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover />\r\n\r\n            <CCard>\r\n                <CCardBody>\r\n                    <CForm onSubmit={handleSubmit}>\r\n                        <div className=\"mb-3\">\r\n                        <textarea className='form-control' placeholder='Warning Notice Content' value={content} onChange={(e) => setContent(e.target.value)}/>\r\n                        </div>\r\n  \r\n                        <div className=\"mb-3\">\r\n                            <CButton type='submit' color=\"primary\" className=\"px-4\">\r\n                                Update\r\n                            </CButton>\r\n                        </div>\r\n                    </CForm>\r\n                </CCardBody>\r\n            </CCard>\r\n\r\n\r\n\r\n        </>\r\n    );\r\n}\r\nexport default WarningNotice;"],"names":["React","content","setContent","handleSubmit","e","preventDefault","url","Constants","body","JSON","stringify","fetch","method","headers","userToken","response","json","data","status","toast","message","position","theme","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","onSubmit","className","placeholder","value","onChange","target","type","color"],"sourceRoot":""}