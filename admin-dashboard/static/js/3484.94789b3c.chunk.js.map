{"version":3,"file":"static/js/3484.94789b3c.chunk.js","mappings":"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","sources":["components/ActionButton.js","components/RolesTable.js"],"sourcesContent":["import React from 'react';\r\nimport { useUserStore } from 'src/userStore';\r\nconst ActionButton = (props) => {\r\n    const hasPerm = useUserStore((state) => state.hasPerm)\r\n    let prefix = React.useMemo(() => {\r\n        return props.prefix\r\n    }, [props.prefix])\r\n    return (\r\n        <>\r\n            {\r\n                (props.onChangeStatus) ? <span data-title=\"Change Status\" className={`${!hasPerm(`status_${prefix}`) ? 'disabled' : \"\"}`}><i className=\"me-2 fa-solid fa-check-circle text-primary pointer\" onClick={props.onChangeStatus}></i></span> : ''\r\n            }\r\n            {\r\n                (props.onView) ? <span data-title=\"View Data\" className={`${!hasPerm(`view_${prefix}`) ? 'disabled' : \"\"}`}><i className=\"fa-solid fa-eye pointer me-2 text-info\" onClick={props.onView}></i></span> : ''\r\n            }\r\n\r\n            {\r\n                (props.onEdit) ? <span data-title=\"Edit Data\" className={`${!hasPerm(`change_${prefix}`) ? 'disabled' : \"\"}`}><i className=\"fa-solid fa-pen-to-square pointer me-2 text-warning\" onClick={props.onEdit}></i></span> : ''\r\n            }\r\n\r\n            {\r\n                (props.onDelete) ? <span data-title=\"Delete Data\" className={`mx-3 ${!hasPerm(`delete_${prefix}`) ? 'disabled' : \"\"}`}><i className=\" fa-solid fa-trash pointer text-danger\" onClick={props.onDelete}></i></span> : <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActionButton;","import React from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Constants, { userToken } from \"src/Constants\";\r\nimport { CCard, CCardBody } from \"@coreui/react\";\r\nimport ActionButton from \"./ActionButton\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nconst RolesTable = () => {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [data, setData] = React.useState([]);\r\n    const [load, setLoad] = React.useState(true)\r\n    const handleEdit = (row) => {\r\n        navigate('/privileges/edit', { state: row });\r\n    }\r\n    React.useEffect(() => {\r\n        let { sessionStorage } = window;\r\n        if( sessionStorage.type && sessionStorage.message) {\r\n            toast[sessionStorage.type](sessionStorage.message)\r\n            sessionStorage.clear()\r\n        }\r\n    }, [])\r\n    const handleDelete = async (id) => {\r\n        let confirmation  = window.confirm(\"Do you really want to delete this record?\");\r\n        if(!confirmation) {\r\n            return;\r\n        }\r\n        let url = Constants.privilegeDelete + id;\r\n        let response = await fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': userToken(),\r\n\r\n            }\r\n        })\r\n        let json = await response.json();\r\n        if (json.status === 200) {\r\n            setLoad(!load);\r\n            toast.success(\"Record deleted successfully!\");\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: row => row.id,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Privileges',\r\n            selector: row => row.name,\r\n            sortable: true,\r\n        },\r\n\r\n        // {\r\n        //     name: 'Permissions',\r\n        //     selector: row => row.permissions.join(', ').replaceAll('_', ' '),\r\n        //     sortable: true,\r\n        // },\r\n\r\n        {\r\n            name: 'Last Modified',\r\n            selector: row => new Date(row.updated_at).toLocaleString(),\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Action',\r\n            selector: (row) => <ActionButton prefix=\"crossing\" onEdit={() => handleEdit(row)} onDelete={() => handleDelete(row.id)}/>,\r\n            sortable: true\r\n        }\r\n    ];\r\n\r\n    React.useEffect(() => {\r\n        let url = Constants.privilegeRoles;\r\n\r\n\r\n        (async () => {\r\n            let response = await fetch(url, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': userToken(),\r\n\r\n                }\r\n            })\r\n            let data = await response.json();\r\n            console.log(data);\r\n            setData(data.data);\r\n\r\n\r\n        })()\r\n    }, [ load])\r\n\r\n\r\n    return (\r\n        <>\r\n\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                theme=\"colored\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover />\r\n\r\n            <CCard className=\"my-2\">\r\n                <CCardBody>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <h5 className=\"d-inline text-uppercase\">Privileges</h5>\r\n                        </div>\r\n                        <div className=\"col-md-2 ms-auto\">\r\n                            <Link to='/privileges/add' className=\"btn btn-primary w-100\">Add Privilege</Link>\r\n                        </div>\r\n                    </div>\r\n                </CCardBody>\r\n            </CCard>\r\n            <DataTable\r\n                columns={columns}\r\n                data={data}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RolesTable;"],"names":["props","hasPerm","useUserStore","state","prefix","React","onChangeStatus","className","onClick","onView","onEdit","onDelete","navigate","useNavigate","data","setData","load","setLoad","sessionStorage","window","type","message","toast","clear","handleDelete","id","confirm","url","Constants","fetch","method","headers","userToken","response","json","status","columns","name","selector","row","sortable","Date","updated_at","toLocaleString","handleEdit","console","log","position","theme","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","to"],"sourceRoot":""}