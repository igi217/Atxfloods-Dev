{"version":3,"file":"static/js/8177.02914cfa.chunk.js","mappings":"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","sources":["components/ActionButton.js","pages/Jurisdictions.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useUserStore } from 'src/userStore';\r\nconst ActionButton = (props) => {\r\n    const hasPerm = useUserStore((state) => state.hasPerm)\r\n    let prefix = React.useMemo(() => {\r\n        return props.prefix\r\n    }, [props.prefix])\r\n    return (\r\n        <>\r\n            {\r\n                (props.onChangeStatus) ? <span data-title=\"Change Status\" className={`${!hasPerm(`status_${prefix}`) ? 'disabled' : \"\"}`}><i className=\"me-2 fa-solid fa-check-circle text-primary pointer\" onClick={props.onChangeStatus}></i></span> : ''\r\n            }\r\n            {\r\n                (props.onView) ? <span data-title=\"View Data\" className={`${!hasPerm(`view_${prefix}`) ? 'disabled' : \"\"}`}><i className=\"fa-solid fa-eye pointer me-2 text-info\" onClick={props.onView}></i></span> : ''\r\n            }\r\n\r\n            {\r\n                (props.onEdit) ? <span data-title=\"Edit Data\" className={`${!hasPerm(`change_${prefix}`) ? 'disabled' : \"\"}`}><i className=\"fa-solid fa-pen-to-square pointer me-2 text-warning\" onClick={props.onEdit}></i></span> : ''\r\n            }\r\n\r\n            {\r\n                (props.onDelete) ? <span data-title=\"Delete Data\" className={`mx-3 ${!hasPerm(`delete_${prefix}`) ? 'disabled' : \"\"}`}><i className=\" fa-solid fa-trash pointer text-danger\" onClick={props.onDelete}></i></span> : <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActionButton;","import React from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport Constants, { downloadCSV, userToken } from \"src/Constants\";\r\nimport ActionButton from \"../components/ActionButton\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { CButton, CCard, CCardBody, } from \"@coreui/react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nconst Jurisdiction = (props) => {\r\n\r\n    const navigate = useNavigate()\r\n    const [data, setData] = React.useState([]);\r\n    const [pagination, setPagination] = React.useState({\r\n        per_page: 100,\r\n        page_number: 1\r\n    })\r\n    const [load, setLoad] = React.useState(true)\r\n    const [total, setTotal] = React.useState(0);\r\n    const columns = [\r\n        {\r\n            name: 'Id',\r\n            selector: row => row.id,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Name',\r\n            selector: row => row.name,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Abbreviation',\r\n            selector: row => <span className=\"text-uppercase\">{row.short_name}</span>,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Minimum Latitude',\r\n            selector: row => row.min_lat,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Maximum Latitude',\r\n            selector: row => row.max_lat,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Minimum Longitude',\r\n            selector: row => row.min_lon,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Maximum Longitude',\r\n            selector: row => row.max_lon,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Last Modified',\r\n            selector: row => new Date(row.updated_at).toLocaleString(),\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Action',\r\n            selector: (row) => <ActionButton prefix={row.short_name === \"all\" ? \"disable\" : 'jurisdiction'} onEdit={() => handleEdit(row)} onDelete={() => handleDelete(row.id)} />,\r\n            sortable: true\r\n        }\r\n    ];\r\n\r\n\r\n\r\n    const handleEdit = (row) => {\r\n        // console.log(row);\r\n        navigate('/jurisdictions/update', { state: row });\r\n    }\r\n    const handleDelete = async (id) => {\r\n        let confirmation = window.confirm(\"Do you really want to delete this record?\");\r\n        if (!confirmation) {\r\n            return;\r\n        }\r\n        let url = Constants.jurisdictionDelete + id;\r\n        let response = await fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': userToken(),\r\n\r\n            }\r\n        })\r\n        let json = await response.json();\r\n        if (json.status === 200) {\r\n            setLoad(!load);\r\n            toast.success(\"Record deleted successfully!\");\r\n        }\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        let { sessionStorage } = window;\r\n        if (sessionStorage.type && sessionStorage.message) {\r\n            toast[sessionStorage.type](sessionStorage.message)\r\n            sessionStorage.clear()\r\n        }\r\n    }, [])\r\n    React.useEffect(() => {\r\n        let url = Constants.jurisdictionList;\r\n\r\n\r\n        (async () => {\r\n            let response = await fetch(url + `?per_page=${pagination.per_page}&page_number=${pagination.page_number}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Authorization': userToken(),\r\n\r\n                }\r\n            })\r\n            let data = await response.json();\r\n            // console.log(data);\r\n            setData(data.data);\r\n            setTotal(data.total);\r\n\r\n\r\n        })()\r\n    }, [pagination, load])\r\n\r\n    \r\n    \r\n    async function handleDownload() {\r\n        await downloadCSV(Constants.jurisdictionList + `?per_page=10000&page_number=1`, \"jurisdictions.csv\", \"data\")\r\n    }\r\n    return (\r\n        <>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                theme=\"colored\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover />\r\n            <CCard className=\"my-2\">\r\n                <CCardBody>\r\n                    <div className=\"d-flex flex-row\">\r\n                        <h5>Jurisdictions List</h5>\r\n                        \r\n                        <Link className=\"btn btn-primary ms-auto\" to={`/jurisdictions/create`}>\r\n                            Create Jurisdiction\r\n                        </Link>\r\n\r\n                        <CButton \r\n                        className=\"ms-2\"\r\n                        color=\"success\" \r\n                        onClick={handleDownload}>\r\n                            Download CSV\r\n                        </CButton>\r\n                    </div>\r\n                </CCardBody>\r\n\r\n            </CCard>\r\n            <DataTable\r\n                columns={columns}\r\n                data={data}\r\n                pagination\r\n                paginationServer\r\n                paginationPerPage={100}\r\n                paginationRowsPerPageOptions={[100, 50, 30]}\r\n                paginationTotalRows={total}\r\n                onChangeRowsPerPage={(per_page) => setPagination({ ...pagination, per_page })}\r\n                onChangePage={(page_number, per_page) => setPagination({ ...pagination, page_number })}\r\n            />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Jurisdiction;"],"names":["props","hasPerm","useUserStore","state","prefix","React","onChangeStatus","className","onClick","onView","onEdit","onDelete","navigate","useNavigate","data","setData","per_page","page_number","pagination","setPagination","load","setLoad","total","setTotal","columns","name","selector","row","id","sortable","short_name","min_lat","max_lat","min_lon","max_lon","Date","updated_at","toLocaleString","handleEdit","handleDelete","window","confirm","url","Constants","fetch","method","headers","userToken","response","json","status","toast","downloadCSV","sessionStorage","type","message","clear","position","theme","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","to","color","paginationServer","paginationPerPage","paginationRowsPerPageOptions","paginationTotalRows","onChangeRowsPerPage","onChangePage"],"sourceRoot":""}